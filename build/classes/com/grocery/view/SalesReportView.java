/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;


import com.grocery.bean.SaleMaster;
import com.grocery.query.SaleMasterQuery;
import com.grocery.read.MessageFormat;
import com.grocery.read.ReadFile;
import com.grocery.util.MyConnection;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Admin
 */
public class SalesReportView extends javax.swing.JInternalFrame {

    private Date currentDate = new Date();
    private JTextFieldDateEditor editor;
    
    public SalesReportView() {
        initComponents();
        nonGst.setVisible(false);
        gst.setVisible(false);
        igst.setVisible(false);
        
        jLabel22.setVisible(false);
        billAmount.setVisible(false);
        
        
       jLabel24.setVisible(false);
       discount.setVisible(false);
       
        editor = (JTextFieldDateEditor)from.getDateEditor();
        editor.setEditable(false);
        
        from.setDate(currentDate);
        
        editor = (JTextFieldDateEditor)to.getDateEditor();
        editor.setEditable(false);
        
        to.setDate(currentDate);
        
        jTable1.getTableHeader().setFont(new Font("Arial Unicode MS", Font.BOLD, 11));
        
         jTable1.getColumnModel().getColumn(1).setMinWidth(1);
         jTable1.getColumnModel().getColumn(1).setMaxWidth(1);
        
        gst.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        from = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        to = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        print = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        billAmount = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        finalAmount = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        discount = new javax.swing.JTextField();
        gst = new javax.swing.JRadioButton();
        igst = new javax.swing.JRadioButton();
        nonGst = new javax.swing.JRadioButton();
        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("से");
        jLabel18.setToolTipText("From:");

        from.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        from.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fromPropertyChange(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("तक");
        jLabel19.setToolTipText("To:");

        to.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        to.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                toPropertyChange(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "दिनांक", "बिल की राशि", "अंतिम राशी"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        print.setBackground(new java.awt.Color(153, 153, 255));
        print.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        print.setText("छाप");
        print.setToolTipText("Print");
        print.setMnemonic(KeyEvent.VK_P);
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        print.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                printKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("कुल बिल राशि:");
        jLabel22.setToolTipText("Total Bill Amount:");

        billAmount.setEditable(false);
        billAmount.setBackground(new java.awt.Color(255, 255, 153));
        billAmount.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        billAmount.setForeground(new java.awt.Color(255, 0, 0));
        billAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel23.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("अंतिम बिल राशि:");
        jLabel23.setToolTipText("Final Bill Amount:");

        finalAmount.setEditable(false);
        finalAmount.setBackground(new java.awt.Color(255, 255, 153));
        finalAmount.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        finalAmount.setForeground(new java.awt.Color(255, 0, 0));
        finalAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel24.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel24.setText("कुल छूट:");
        jLabel24.setToolTipText("Total Discount:");

        discount.setEditable(false);
        discount.setBackground(new java.awt.Color(255, 255, 153));
        discount.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        discount.setForeground(new java.awt.Color(255, 0, 0));
        discount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        buttonGroup1.add(gst);
        gst.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        gst.setForeground(new java.awt.Color(255, 0, 0));
        gst.setText("जीएसटी");
        gst.setToolTipText("GST");
        gst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gstActionPerformed(evt);
            }
        });

        buttonGroup1.add(igst);
        igst.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        igst.setForeground(new java.awt.Color(255, 0, 0));
        igst.setText("IGST");
        igst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igstActionPerformed(evt);
            }
        });

        buttonGroup1.add(nonGst);
        nonGst.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        nonGst.setForeground(new java.awt.Color(255, 0, 0));
        nonGst.setText(" नहीं-जीएसटी");
        nonGst.setToolTipText("Non-GST");
        nonGst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonGstActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("बिक्री रिपोर्ट");
        jLabel1.setToolTipText("Sales Report");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(433, 433, 433)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(436, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gst)
                .addGap(18, 18, 18)
                .addComponent(igst)
                .addGap(18, 18, 18)
                .addComponent(nonGst)
                .addGap(284, 284, 284))
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(42, 42, 42)
                        .addComponent(discount))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(billAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(42, 42, 42)
                .addComponent(finalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(to, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gst)
                    .addComponent(igst)
                    .addComponent(nonGst))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(print)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fromPropertyChange
        if(from.getDate() != null)
            loadTable();
    }//GEN-LAST:event_fromPropertyChange

    private void toPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_toPropertyChange
        if(to.getDate() != null)
            loadTable();
    }//GEN-LAST:event_toPropertyChange

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        print();
    }//GEN-LAST:event_printActionPerformed

    private void printKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_printKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            print();
    }//GEN-LAST:event_printKeyPressed

    private void gstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gstActionPerformed
        loadTable();
    }//GEN-LAST:event_gstActionPerformed

    private void igstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igstActionPerformed
        loadTable();
    }//GEN-LAST:event_igstActionPerformed

    private void nonGstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonGstActionPerformed
         loadTable();
    }//GEN-LAST:event_nonGstActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField billAmount;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField finalAmount;
    private com.toedter.calendar.JDateChooser from;
    private javax.swing.JRadioButton gst;
    private javax.swing.JRadioButton igst;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton nonGst;
    private java.awt.Panel panel1;
    private javax.swing.JButton print;
    private com.toedter.calendar.JDateChooser to;
    // End of variables declaration//GEN-END:variables

    private void loadTable() 
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        defaultTableModel.setRowCount(0);
        
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");
        
        Date fromDate = from.getDate();
        Date toDate = to.getDate();
        
        if(fromDate != null && toDate != null)
        {
            String stringFrom = dateFormat.format(fromDate);
            String stringTo = dateFormat.format(toDate);

            try
            {
                fromDate = dateFormat.parse(stringFrom);
                toDate = dateFormat.parse(stringTo);

                if(toDate.compareTo(fromDate) < 0)
                {
                    JOptionPane.showMessageDialog(null, MessageFormat.getMessage("To Date can't be ahead of From Date"), "Error Message", JOptionPane.ERROR_MESSAGE);
                    getTotal(1, billAmount);
                   // getTotal(2, discount);
                    getTotal(2, finalAmount);
                    
                    to.setDate(currentDate);
                    from.setDate(currentDate);
                    return;
                }
                SaleMaster saleMaster = new SaleMaster();
                saleMaster.setDate(fromDate);
                saleMaster.setTo(toDate);
                
                SaleMasterQuery saleMasterQuery = new SaleMasterQuery();
                
                List<Object[]> list = null;
                list =saleMasterQuery.getSale1(saleMaster);
//                if(gst.isSelected())
//                    list = saleMasterQuery.getSale(saleMaster, "GST");
//               else if(igst.isSelected())
//                    list = saleMasterQuery.getSale(saleMaster, "IGST");
//                else
//                    list = saleMasterQuery.getSale(saleMaster, "NON-GST");
                
                
                for(Object[] object: list)
                {
                    defaultTableModel.addRow(new Object[]{dateFormat.format(object[0]), object[1], object[2]});
                }
                jTable1.setModel(defaultTableModel);
              //  getTotal(1, billAmount);
              //  getTotal(2, discount);
                getTotal(2, finalAmount);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }
    
    private void getTotal(int columnIndex, JTextField jTextField) 
    {
        int index = jTable1.getRowCount();
        int i = 0;
        float sum = 0;
        
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        
        while(i < index)
        {
            sum = sum + Float.parseFloat(jTable1.getValueAt(i, columnIndex).toString());
            i++;
        }
        
        jTextField.setText(decimalFormat.format(sum));
    }
    
    private void print() 
    {
        if(jTable1.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Nothing to Print"), "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");
        
        Date fromDate = from.getDate();
        Date toDate = to.getDate();
        
        java.sql.Date sqlFromDate = new java.sql.Date(fromDate.getTime());
        java.sql.Date sqlToDate = new java.sql.Date(toDate.getTime());
        
        String reportSource = "";
        String joinQuery = "";
        
        if(gst.isSelected())
        {
                joinQuery = " SELECT \n"
                + " sale_master.`Id` AS sale_master_Id,\n"
                + " sale_master.`date` AS sale_master_date,\n"
                + " sale_master.`storeId` AS sale_master_storeId,\n"
                + " sale_master.`counterId` AS sale_master_counterId,\n"
                + " sale_master.`customerId` AS sale_master_customerId,\n"
                + " sale_master.`billAmount` AS billAmount,\n"
                + " sale_master.`discount` AS discount,\n"
                + "  sale_master.`finalBillAmount` AS finalBillAmount,\n"
                + " sale_master.`status` AS sale_master_status,\n"
                + " sale_master.`remark` AS sale_master_remark ,\n"
                + " store_details.`Id` AS store_details_Id,\n"
                + " store_details.`name` AS store_details_name,\n"
                + " store_details.`address` AS store_details_address,\n"
                + " store_details.`city` AS store_details_city,\n"
                + " store_details.`state` AS store_details_state,\n"
                + " store_details.`pincode` AS store_details_pincode,\n"
                + " store_details.`phone` AS store_details_phone,\n"
                + "  store_details.`website` AS store_details_website,\n"
                + " store_details.`email` AS store_details_email,\n"
                + " store_details.`gstNumber` AS store_details_gstNumber,\n"
                + "  store_details.`hsnCode` AS store_details_hsnCode,\n"
                + "  store_details.`photo` AS store_details_photo,\n"
                + " sale_master.`gstAmount` AS sale_master_gstAmount,\n"
                + " (sale_master.`gstAmount`/2) AS sale_master_cgst,\n"
                + " (sale_master.`gstAmount`/2) AS sale_master_sgst,\n"
                + " (0.0) AS sale_master_igst \n" 
                + " FROM \n"
                + " `sale_master` sale_master INNER JOIN  `store_details` store_details  ON store_details.`Id` = sale_master.`storeId`\n";
//                + "WHERE ((sale_master.date BETWEEN '" + sqlFromDate + "' AND '" + sqlToDate + "') AND sale_master.status = '1' AND sale_master.remark = 'GST') "
//                + "order BY sale_master.date ASC";
        
                  reportSource = ReadFile.getPath() + "SalesReportGst.jrxml";
        }
        else if(igst.isSelected()){
             joinQuery = "SELECT\n" +
                            "     sale_master.`Id` AS sale_master_Id,\n" +
                            "     sale_master.`date` AS sale_master_date,\n" +
                            "     sale_master.`storeId` AS sale_master_storeId,\n" +
                            "     sale_master.`counterId` AS sale_master_counterId,\n" +
                            "     sale_master.`customerId` AS sale_master_customerId,\n" +
                            "     sale_master.`billAmount` AS billAmount,\n" +
                            "     sale_master.`discount` AS discount,\n" +
                            "     sale_master.`finalBillAmount` AS finalBillAmount,\n" +
                            "     sale_master.`status` AS sale_master_status,\n" +
                            "     sale_master.`remark` AS sale_master_remark,\n" +
                            "     store_details.`Id` AS store_details_Id,\n" +
                            "     store_details.`name` AS store_details_name,\n" +
                            "     store_details.`address` AS store_details_address,\n" +
                            "     store_details.`city` AS store_details_city,\n" +
                            "     store_details.`state` AS store_details_state,\n" +
                            "     store_details.`pincode` AS store_details_pincode,\n" +
                            "     store_details.`phone` AS store_details_phone,\n" +
                            "     store_details.`website` AS store_details_website,\n" +
                            "     store_details.`email` AS store_details_email,\n" +
                            "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
                            "     store_details.`hsnCode` AS store_details_hsnCode,\n" +
                            "     store_details.`photo` AS store_details_photo,\n" +
                            "     sale_master.`gstAmount` AS sale_master_gstAmount,\n" +
                            "     (sale_master.`gstAmount`/2) AS sale_master_cgst,\n" +
                            "     (sale_master.`gstAmount`/2) AS sale_master_sgst,\n" +
                            "     (0.0) AS sale_master_igst\n" +
                            "FROM\n" +
                            "     `store_details` store_details INNER JOIN `sale_master` sale_master ON store_details.`Id` = sale_master.`storeId` \n" +
                            "WHERE ((sale_master.date BETWEEN '" + sqlFromDate + "' AND '" + sqlToDate + "') AND sale_master.status = '1' AND sale_master.remark = 'IGST') "
                +           "order BY sale_master.date ASC";
                
                reportSource = ReadFile.getPath() + "Reports\\SalesReportIGst.jrxml"; 
        }
        
        else
        {
            joinQuery = "SELECT\n" +
                            "     sale_master.`Id` AS sale_master_Id,\n" +
                            "     sale_master.`date` AS sale_master_date,\n" +
                            "     sale_master.`storeId` AS sale_master_storeId,\n" +
                            "     sale_master.`counterId` AS sale_master_counterId,\n" +
                            "     sale_master.`customerId` AS sale_master_customerId,\n" +
                            "     sale_master.`billAmount` AS billAmount,\n" +
                            "     sale_master.`discount` AS discount,\n" +
                            "     sale_master.`finalBillAmount` AS finalBillAmount,\n" +
                            "     sale_master.`status` AS sale_master_status,\n" +
                            "     sale_master.`remark` AS sale_master_remark,\n" +
                            "     store_details.`Id` AS store_details_Id,\n" +
                            "     store_details.`name` AS store_details_name,\n" +
                            "     store_details.`address` AS store_details_address,\n" +
                            "     store_details.`city` AS store_details_city,\n" +
                            "     store_details.`state` AS store_details_state,\n" +
                            "     store_details.`pincode` AS store_details_pincode,\n" +
                            "     store_details.`phone` AS store_details_phone,\n" +
                            "     store_details.`website` AS store_details_website,\n" +
                            "     store_details.`email` AS store_details_email,\n" +
                            "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
                            "     store_details.`hsnCode` AS store_details_hsnCode,\n" +
                            "     store_details.`photo` AS store_details_photo,\n" +
                            "     sale_master.`gstAmount` AS sale_master_gstAmount,\n" +
                            "     (sale_master.`gstAmount`/2) AS sale_master_cgst,\n" +
                            "     (sale_master.`gstAmount`/2) AS sale_master_sgst,\n" +
                            "     (0.0) AS sale_master_igst\n" +
                            "FROM\n" +
                            "     `store_details` store_details INNER JOIN `sale_master` sale_master ON store_details.`Id` = sale_master.`storeId` \n" +
                            "WHERE ((sale_master.date BETWEEN '" + sqlFromDate + "' AND '" + sqlToDate + "') AND sale_master.status = '1' AND sale_master.remark = 'NON-GST') "
                +           "order BY sale_master.date ASC";
                
                reportSource = ReadFile.getPath() + "SalesReportNonGst.jrxml"; 
        }
        
        try
        {
            connection = MyConnection.createConnection();
            statement = connection.createStatement();
            resultSet = statement.executeQuery(joinQuery);
            
            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
            JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);
            Map<String, Object> map = new HashMap<>();
            
            map.put("from", dateFormat.format(sqlFromDate));
            map.put("to", dateFormat.format(sqlToDate));
            
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, map, resultSetDataSource);
            JasperViewer.viewReport(jasperPrint, false);
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            if (resultSet != null) 
            {
                try 
                {
                //    System.out.println("Statement");
                    resultSet.close();
                } 
                catch (SQLException e) 
                { /* ignored */}
            }
            if (statement != null) 
            {
                try 
                {
                //    System.out.println("Statement");
                    statement.close();
                } 
                catch (SQLException e) 
                { /* ignored */}
            }
            
            if (connection != null) 
            {
                try 
                {
                //    System.out.println("Connection");
                    connection.close();
                } 
                catch (SQLException e)
                {

                }
            }
        }
    }
}
