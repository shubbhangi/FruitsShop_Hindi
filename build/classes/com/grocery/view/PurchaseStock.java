/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.ItemMaster;
import com.grocery.bean.VendorMaster;
import com.grocery.query.BeginningCashQuery;
import com.grocery.query.ExpensesQuery;
import com.grocery.query.ItemQuery;
import com.grocery.query.PurchaseBrandQuery;
import com.grocery.query.VendorQuery;
import com.grocery.read.MessageFormat;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Font;
import java.awt.event.KeyEvent;
import static java.awt.event.KeyEvent.VK_A;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author GanpatiBappa
 */
public class PurchaseStock extends javax.swing.JFrame {
    private Date date = new Date();
    private JDesktopPane jDesktopPane;
    private JTextFieldDateEditor editor;
    private boolean vendorFlag;
    private boolean newVendorFlag;
    private boolean itemFlag;
    private boolean brandFlag;
    private BigDecimal beginningCash;
    private BigDecimal expenses;
    
    public PurchaseStock() {
        initComponents();
      

        quantity.setFont(quantity.getFont().deriveFont(Font.BOLD, 11));
        total.setFont(total.getFont().deriveFont(Font.BOLD, 11));
        this.jDesktopPane = jDesktopPane;
        
        add.setMnemonic(VK_A);
    
        jTable1.getTableHeader().setFont(new Font("Arial Unicode MS", Font.BOLD, 11));
        
        purchaseDate.setDate(date);
      
        editor = (JTextFieldDateEditor)purchaseDate.getDateEditor();
        editor.setEditable(false);
        editor.setEditable(false);
        loadVendor();
        loadItem();
        loadBrand();
        loadBeginningCash();
        loadExpenses();
        getTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        vendorName = new javax.swing.JComboBox<String>();
        jPanel4 = new javax.swing.JPanel();
        item = new javax.swing.JComboBox<String>();
        jPanelItem = new javax.swing.JPanel();
        newItem = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        quantity = new javax.swing.JFormattedTextField();
        jLabel30 = new javax.swing.JLabel();
        total = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        purchaseGstAmountNew = new javax.swing.JFormattedTextField();
        jLabel46 = new javax.swing.JLabel();
        actualTotal = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        brand = new javax.swing.JComboBox<String>();
        jLabel3 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        gstNotTaken = new javax.swing.JRadioButton();
        gstTaken = new javax.swing.JRadioButton();
        gst = new javax.swing.JComboBox<String>();
        jLabel27 = new javax.swing.JLabel();
        weight = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        units = new javax.swing.JComboBox<String>();
        jLabel10 = new javax.swing.JLabel();
        jPanelBrand = new javax.swing.JPanel();
        newBrand = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        purchaseDate = new com.toedter.calendar.JDateChooser();
        add = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        jPanelDiscount = new javax.swing.JPanel();
        jCheckBoxDiscount = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        discount = new javax.swing.JFormattedTextField();
        jLabel38 = new javax.swing.JLabel();
        finalAmountPaid = new javax.swing.JTextField();
        Pay = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("नाम :");
        jLabel17.setToolTipText("Name");

        vendorName.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        vendorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorNameActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "आइटम विवरण:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Unicode MS", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        item.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });

        jPanelItem.setBackground(new java.awt.Color(255, 255, 255));

        newItem.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        newItem.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newItemFocusGained(evt);
            }
        });
        newItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newItemKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelItemLayout = new javax.swing.GroupLayout(jPanelItem);
        jPanelItem.setLayout(jPanelItemLayout);
        jPanelItemLayout.setHorizontalGroup(
            jPanelItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItemLayout.createSequentialGroup()
                .addComponent(newItem, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelItemLayout.setVerticalGroup(
            jPanelItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItemLayout.createSequentialGroup()
                .addComponent(newItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel24.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel24.setText(" मात्रा:");

        quantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));
        quantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantity.setText("00");
        quantity.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                quantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityFocusLost(evt);
            }
        });
        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityKeyReleased(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel30.setText("कुल राशि");

        total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        total.setText("0.00");
        total.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        total.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                totalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                totalFocusLost(evt);
            }
        });
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalKeyReleased(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");
        jLabel4.setPreferredSize(new java.awt.Dimension(7, 15));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*");
        jLabel5.setPreferredSize(new java.awt.Dimension(7, 15));

        jLabel33.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("जीएसटी राशि");
        jLabel33.setToolTipText("GST Amount");

        purchaseGstAmountNew.setBackground(new java.awt.Color(255, 255, 153));
        purchaseGstAmountNew.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        purchaseGstAmountNew.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        purchaseGstAmountNew.setText("0.00");
        purchaseGstAmountNew.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        purchaseGstAmountNew.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                purchaseGstAmountNewFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                purchaseGstAmountNewFocusLost(evt);
            }
        });
        purchaseGstAmountNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseGstAmountNewActionPerformed(evt);
            }
        });
        purchaseGstAmountNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                purchaseGstAmountNewKeyReleased(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel46.setText("वास्तविक राशि");
        jLabel46.setToolTipText("Actual Amount");

        actualTotal.setBackground(new java.awt.Color(255, 255, 153));
        actualTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));
        actualTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        actualTotal.setText("00");
        actualTotal.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        actualTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                actualTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                actualTotalFocusLost(evt);
            }
        });
        actualTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                actualTotalKeyReleased(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("वस्तु का नाम:");
        jLabel23.setToolTipText("Item Name:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("*");
        jLabel8.setPreferredSize(new java.awt.Dimension(7, 15));

        brand.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("*");
        jLabel3.setPreferredSize(new java.awt.Dimension(7, 15));

        jLabel26.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("ब्रांड :");
        jLabel26.setToolTipText("Item Name:");

        gstNotTaken.setFont(new java.awt.Font("Arial Unicode MS", 1, 10)); // NOI18N
        gstNotTaken.setForeground(new java.awt.Color(255, 0, 0));
        gstNotTaken.setText("नोन-जीएसटी");
        gstNotTaken.setToolTipText("Non-GST");
        gstNotTaken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gstNotTakenActionPerformed(evt);
            }
        });

        gstTaken.setFont(new java.awt.Font("Arial Unicode MS", 1, 10)); // NOI18N
        gstTaken.setForeground(new java.awt.Color(255, 0, 0));
        gstTaken.setText("जीएसटी");
        gstTaken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gstTakenActionPerformed(evt);
            }
        });

        gst.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        gst.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "5", "12", "18", "28" }));
        gst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gstActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("वजन ");

        weight.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));
        weight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        weight.setText("00");
        weight.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        weight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                weightFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                weightFocusLost(evt);
            }
        });
        weight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                weightKeyReleased(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*");
        jLabel9.setPreferredSize(new java.awt.Dimension(7, 15));

        jLabel31.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("इकाई");
        jLabel31.setToolTipText("Unit");

        units.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        units.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Units--", "Kg", "gm", "unit" }));
        units.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitsActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");
        jLabel10.setPreferredSize(new java.awt.Dimension(7, 15));

        jPanelBrand.setBackground(new java.awt.Color(255, 255, 255));

        newBrand.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        newBrand.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newBrand.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newBrandFocusGained(evt);
            }
        });
        newBrand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newBrandKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrandLayout = new javax.swing.GroupLayout(jPanelBrand);
        jPanelBrand.setLayout(jPanelBrandLayout);
        jPanelBrandLayout.setHorizontalGroup(
            jPanelBrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBrandLayout.createSequentialGroup()
                .addComponent(newBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelBrandLayout.setVerticalGroup(
            jPanelBrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newBrand)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(10, 10, 10)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gstNotTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gstTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(units, 0, 207, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purchaseGstAmountNew, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanelItem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(units, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(actualTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(purchaseGstAmountNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gstNotTaken)
                        .addComponent(gstTaken)
                        .addComponent(gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("खरीद  भण्डार");
        jLabel1.setToolTipText("PURCHASE STOCK");

        jLabel29.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel29.setText("खरीद की तारीख:");
        jLabel29.setToolTipText("Purchase Date:");

        purchaseDate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(293, 293, 293)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(purchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(purchaseDate, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        add.setText("जोड़ना");
        add.setToolTipText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addKeyPressed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "वस्तु का नाम", "ब्रांड ", "वजन ", "इकाई", "मात्रा", "कुल राशि", "जीएसटी %", "जीएसटी राशि", "वास्तविक राशि", "जीएसटी प्रकार"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel25.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setText("कुल राशि");
        jLabel25.setToolTipText("Total");

        amount.setBackground(new java.awt.Color(255, 255, 153));
        amount.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        amount.setForeground(new java.awt.Color(255, 0, 0));
        amount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanelDiscount.setBackground(new java.awt.Color(255, 255, 255));

        jCheckBoxDiscount.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jCheckBoxDiscount.setForeground(new java.awt.Color(255, 0, 0));
        jCheckBoxDiscount.setText(" छूट");
        jCheckBoxDiscount.setToolTipText("Discount");
        jCheckBoxDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDiscountActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel37.setText(" छूट राशि:");
        jLabel37.setToolTipText("Discount Amount:");

        discount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        discount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discount.setText("0.00");
        discount.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        discount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                discountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                discountFocusLost(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel38.setText("अंतिम राशि का भुगतान:");
        jLabel38.setToolTipText("Final Amount Paid:");

        finalAmountPaid.setBackground(new java.awt.Color(255, 255, 153));
        finalAmountPaid.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        finalAmountPaid.setForeground(new java.awt.Color(255, 0, 0));
        finalAmountPaid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        finalAmountPaid.setText("0.00");
        finalAmountPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalAmountPaidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDiscountLayout = new javax.swing.GroupLayout(jPanelDiscount);
        jPanelDiscount.setLayout(jPanelDiscountLayout);
        jPanelDiscountLayout.setHorizontalGroup(
            jPanelDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDiscountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxDiscount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(finalAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDiscountLayout.setVerticalGroup(
            jPanelDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDiscountLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDiscountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(finalAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxDiscount)))
        );

        Pay.setBackground(new java.awt.Color(255, 255, 255));
        Pay.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        Pay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/pay32.png"))); // NOI18N
        Pay.setText(" भुगतान");
        Pay.setToolTipText("Pay");
        Pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(255, 255, 255));
        cancel.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/1439034464_DeleteRed.png"))); // NOI18N
        cancel.setText("रद्द करना");
        cancel.setToolTipText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(593, 593, 593)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(Pay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(cancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel17)
                        .addGap(48, 48, 48)
                        .addComponent(vendorName, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancel)
                    .addComponent(Pay))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1372, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void vendorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorNameActionPerformed
        //        newVendor.setText("");
        //        registration.setText("N/A");
        //        contact.setText("N/A");
        //        address.setText("N/A");
        //        gstNumber.setText("N/A");

        //        VendorDetails vendorDetail = new VendorDetails();
        //        vendorDetail.setVisible(true);
        try
        {
            if(vendorName.getItemCount() != 0)
            {
                if(vendorName.getSelectedIndex() == 0)
                {
                    vendorFlag = false;

                    // jPanelNewVendor.setVisible(false);
                }
                else
                if(vendorName.getSelectedIndex() == 1)
                {
                    vendorFlag = false;
                    // jPanelNewVendor.setVisible(true);
                }
                else
                {
                    vendorFlag = true;
                    // jPanelNewVendor.setVisible(false);
                    loadVendor();
                }
            }
        }
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_vendorNameActionPerformed

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        newItem.setText("");
        if(item.getSelectedIndex() == 1)
        jPanelItem.setVisible(true);
        else
        jPanelItem.setVisible(false);

        newItem.setText("");
        try
        {
            if(item.getItemCount() != 0)
            {
                if(item.getSelectedIndex() == 0)
                {
                    itemFlag = false;
                    // jPanelNewVendor.setVisible(false);
                }
                else
                if(item.getSelectedIndex() == 1)
                {
                    itemFlag = false;
                    jPanelItem.setVisible(true);
                }
                else
                {
                    itemFlag = true;
                    jPanelItem.setVisible(false);
                    loadItem();
                }
            }
        }
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_itemActionPerformed

    private void newItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newItemFocusGained
        newItem.selectAll();
    }//GEN-LAST:event_newItemFocusGained

    private void newItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newItemKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == ',' || c == '.' || c == KeyEvent.VK_SPACE || c == '-' || c == ':'))
        evt.consume();
    }//GEN-LAST:event_newItemKeyTyped

    private void quantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusGained
        quantity.selectAll();
    }//GEN-LAST:event_quantityFocusGained

    private void quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusLost
        if(quantity.getText().trim().isEmpty())
        quantity.setText("0.00");
    }//GEN-LAST:event_quantityFocusLost

    private void quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyReleased
        if(!(quantity.getText().trim().isEmpty()))
        {
            DecimalFormat decimalFormat = new DecimalFormat("#0.00");
            float quantity = Float.parseFloat(this.quantity.getText());
            float total = Float.parseFloat(this.total.getText());
        }
        
    }//GEN-LAST:event_quantityKeyReleased

    private void totalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalFocusGained
        total.selectAll();
    }//GEN-LAST:event_totalFocusGained

    private void totalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalFocusLost
        if(total.getText().trim().isEmpty())
        {
            total.setText("0.00");
        }
     
    }//GEN-LAST:event_totalFocusLost

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void totalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyReleased
        if(!(total.getText().trim().isEmpty()))
        {
            DecimalFormat decimalFormat = new DecimalFormat("#0.00");
            float quantity = Float.parseFloat(this.quantity.getText());
            float total = Float.parseFloat(this.total.getText());
        }
        
        
    }//GEN-LAST:event_totalKeyReleased

    private void gstNotTakenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gstNotTakenActionPerformed
        gstTaken.setVisible(false);
        gstTaken.setSelected(false);
        //        igstP.setVisible(false);
        //        igstP.setSelected(false);
        gst.setVisible(false);

        gstNotTaken.setVisible(true);
    }//GEN-LAST:event_gstNotTakenActionPerformed

    private void gstTakenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gstTakenActionPerformed
        gstTaken.setVisible(true);
        gst.setVisible(true);
        if(gstTaken.isSelected()){
            gstTaken.setSelected(true);
        }
    }//GEN-LAST:event_gstTakenActionPerformed

    private void gstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gstActionPerformed
     if(!(total.getText().trim().isEmpty()) && gst.getSelectedItem()!="0")
        {
            DecimalFormat decimalFormat = new DecimalFormat("#0.00");
            float total = Float.parseFloat(this.total.getText());
            float gst_percent = Float.parseFloat(gst.getSelectedItem().toString());

            float gstAmount = calculateGst(total, gst_percent);
   
            float gst_percentTotal = calculateGSTPerNew(gst_percent);
            //this.gstPer.setText(decimalFormat.format(gst_percentTotal));
            float gt = calculateGSTPerNew(gst_percent)+1;
            float gtTotal =(gst_percentTotal/gt);
            float purchaseGstAmount1 = (gst_percentTotal / gt)*total;
            this.purchaseGstAmountNew.setText(decimalFormat.format(purchaseGstAmount1));

            float actualAmount = total - purchaseGstAmount1;
            this.actualTotal.setText(decimalFormat.format(actualAmount));

            //  float igst_percent = Float.parseFloat(gst.getSelectedItem().toString());
        }
       
    }//GEN-LAST:event_gstActionPerformed

    private void purchaseGstAmountNewFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseGstAmountNewFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseGstAmountNewFocusGained

    private void purchaseGstAmountNewFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseGstAmountNewFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseGstAmountNewFocusLost

    private void purchaseGstAmountNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseGstAmountNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseGstAmountNewActionPerformed

    private void purchaseGstAmountNewKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purchaseGstAmountNewKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseGstAmountNewKeyReleased

    private void actualTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actualTotalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_actualTotalFocusGained

    private void actualTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_actualTotalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_actualTotalFocusLost

    private void actualTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actualTotalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_actualTotalKeyReleased

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try{
            addToTable();

        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addActionPerformed

    private void addKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)

        try{
            //addToTable();
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addKeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        remove();
    }//GEN-LAST:event_jTable1KeyPressed

    private void jCheckBoxDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDiscountActionPerformed
        discount.setText("0.00");
        finalAmountPaid.setText("0.00");
        if(jCheckBoxDiscount.isSelected())
        {
            jPanelDiscount.setVisible(true);
        }
        else
        {
            jPanelDiscount.setVisible(true);
           // jPanelDiscount.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBoxDiscountActionPerformed

    private void discountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discountFocusGained
        discount.selectAll();
    }//GEN-LAST:event_discountFocusGained

    private void discountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discountFocusLost
        if(discount.getText().trim().isEmpty())
        discount.setText("0.00");
    }//GEN-LAST:event_discountFocusLost

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        if(!(discount.getText().trim().isEmpty()))
        getFinalAmountPaid(discount.getText());
        else
        finalAmountPaid.setText("0.00");
    }//GEN-LAST:event_discountKeyReleased

    private void finalAmountPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalAmountPaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finalAmountPaidActionPerformed

    private void PayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayActionPerformed
        //savePayment();;

         PaymentPurchase payment = new PaymentPurchase();
        // Payment payment = new Payment();
        String totalAmount = amount.getText().trim();
    //     String gstAmount2 = gstAmount.getText().trim();
        String finalAmount = finalAmountPaid.getText().trim();
        String vendorName1 = vendorName.getSelectedItem().toString();
         String vendorName = this.vendorName.getSelectedItem().toString();
            if(vendorName.equalsIgnoreCase("--select--"))
            {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select a vendor"), "Error message", JOptionPane.ERROR_MESSAGE);
                this.vendorName.requestFocus();
                return;
            }
        String discountAmount = discount.getText();
        //Date purDate = purchaseDate.getDate();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy"); 
        //String mfg = dateFormat.format(purDate);
        String gstType ;
        if(gstTaken.isSelected()){
           gstType="GST"; 
        }
       else{
           gstType="NON-GST"; 
        }

         payment.setValues(purchaseDate, totalAmount,discountAmount, finalAmount, getTableData(), vendorName1,gstType);
         payment.setVisible(true);
        
        
        
        
        
     /*   Payment payment = new Payment();
        String totalAmount = amount.getText().trim();
        String finalAmount = finalAmountPaid.getText().trim();
        String vendorName1 = vendorName.getSelectedItem().toString();
        String discountAmount = discount.getText();
        Date purDate = purchaseDate.getDate();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String mfg = dateFormat.format(purDate);
        String gstType ;
        if(gstTaken.isSelected()){
            gstType="GST";
        }
       else{
            gstType="NON-GST";
        }

      //  payment.setValues(purchaseDate, totalAmount,discountAmount, finalAmount, getTableData(), vendorName1,gstType);
      //  payment.setValues(purchaseDate, totalAmount,discountAmount, gstAmount2, finalAmount, getTableData(), vendorName1,gstType);
        payment.setVisible(true);
      */ 
    }//GEN-LAST:event_PayActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void newBrandFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newBrandFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_newBrandFocusGained

    private void newBrandKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newBrandKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_newBrandKeyTyped

    private void brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandActionPerformed
     newBrand.setText("");
        if(brand.getSelectedIndex() == 1)
        jPanelBrand.setVisible(true);
        else
        jPanelBrand.setVisible(false);

        newBrand.setText("");
        try
        {
            if(brand.getItemCount() != 0)
            {
                if(brand.getSelectedIndex() == 0)
                {
                    brandFlag = false;
                    // jPanelNewVendor.setVisible(false);
                }
                else
                if(brand.getSelectedIndex() == 1)
                {
                    brandFlag = false;
                    jPanelBrand.setVisible(true);
                }
                else
                {
                    brandFlag = true;
                    jPanelBrand.setVisible(false);
                    loadItem();
                }
            }
        }
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_brandActionPerformed

    private void weightFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_weightFocusGained

    private void weightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_weightFocusLost

    private void weightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_weightKeyReleased

    private void unitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Pay;
    private javax.swing.JFormattedTextField actualTotal;
    private javax.swing.JButton add;
    private javax.swing.JTextField amount;
    private javax.swing.JComboBox<String> brand;
    private javax.swing.JButton cancel;
    private javax.swing.JFormattedTextField discount;
    private javax.swing.JTextField finalAmountPaid;
    private javax.swing.JComboBox<String> gst;
    private javax.swing.JRadioButton gstNotTaken;
    private javax.swing.JRadioButton gstTaken;
    private javax.swing.JComboBox<String> item;
    private javax.swing.JCheckBox jCheckBoxDiscount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelBrand;
    private javax.swing.JPanel jPanelDiscount;
    private javax.swing.JPanel jPanelItem;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField newBrand;
    private javax.swing.JTextField newItem;
    private com.toedter.calendar.JDateChooser purchaseDate;
    private javax.swing.JFormattedTextField purchaseGstAmountNew;
    private javax.swing.JFormattedTextField quantity;
    private javax.swing.JFormattedTextField total;
    private javax.swing.JComboBox<String> units;
    private javax.swing.JComboBox<String> vendorName;
    private javax.swing.JFormattedTextField weight;
    // End of variables declaration//GEN-END:variables

     private void loadVendor() 
    {
        VendorMaster vendorMaster = new VendorMaster();
        VendorQuery vendorQuery = new VendorQuery();
        
        if(vendorFlag)
            vendorMaster.setName(vendorName.getSelectedItem().toString());
        
        DefaultComboBoxModel defaultComboBoxModel = (DefaultComboBoxModel)vendorName.getModel();
            
        List<VendorMaster> list = vendorQuery.getVendorDetails(vendorMaster);
        if(!(vendorFlag))
        {
            defaultComboBoxModel.removeAllElements();
        
            defaultComboBoxModel.addElement("--Select--");
           // defaultComboBoxModel.addElement("Add New");
            defaultComboBoxModel.addElement("N/A");
            for(VendorMaster vm: list)
                defaultComboBoxModel.addElement(vm.getName());
        }
        else
        {
            for(VendorMaster vm: list)
            {
                
                vendorName.setSelectedItem(vm.getName());
     
        }
        vendorName.setModel(defaultComboBoxModel);
    }
    }
     
     private void loadItem() 
    {
        ItemMaster itemMaster = new ItemMaster();
        ItemQuery itemQuery = new ItemQuery();
        
	  if(itemFlag)
            itemMaster.setName(item.getSelectedItem().toString());
       	
        DefaultComboBoxModel defaultComboBoxModel = (DefaultComboBoxModel)item.getModel();

         List<ItemMaster> list = itemQuery.getItemDetails1(itemMaster);
        if(!(itemFlag))
        {
	   defaultComboBoxModel.removeAllElements();
        
        defaultComboBoxModel.addElement("--Select--");
        defaultComboBoxModel.addElement("Add New");
       
	   for(ItemMaster im: list)
                defaultComboBoxModel.addElement(im.getName());
        }
        else
		{
            for(ItemMaster im: list)
            {
                item.setSelectedItem(im.getName());
            }      
        }
        item.setModel(defaultComboBoxModel);
    }
     
     
      private void loadBrand() 
    {
        ItemMaster itemMaster = new ItemMaster();
        PurchaseBrandQuery purchaseBrandQuery = new PurchaseBrandQuery();
        
	  if(brandFlag)
            itemMaster.setName(brand.getSelectedItem().toString());
       	
        DefaultComboBoxModel defaultComboBoxModel = (DefaultComboBoxModel)brand.getModel();

         List<ItemMaster> list = purchaseBrandQuery.getPurchaseBrandDetails(itemMaster);
        if(!(brandFlag))
        {

	   defaultComboBoxModel.removeAllElements();
        
        defaultComboBoxModel.addElement("--Select--");
        defaultComboBoxModel.addElement("Add New");
       
	   for(ItemMaster im: list)
                defaultComboBoxModel.addElement(im.getName());
        }
        else
		{
            for(ItemMaster im: list)
            {
                brand.setSelectedItem(im.getName());
            }      
        }
        brand.setModel(defaultComboBoxModel);
    }
    
 private void loadBeginningCash() 
    {
        BeginningCashQuery beginningCashQuery = new BeginningCashQuery();
        
        List<BigDecimal> list = beginningCashQuery.getBeginningCash();
        
        for(BigDecimal bd: list)
            beginningCash = bd;
    }
 private void loadExpenses() 
    {
        ExpensesQuery expensesQuery = new ExpensesQuery();
        
        List<BigDecimal> list = expensesQuery.getExpenses();
        
        for(BigDecimal bd: list)
            expenses = bd;
    }
 
 private void getTotal()
    {
        int index = jTable1.getRowCount();
        int i = 0;
        float sum = 0;
        
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        
        while(i < index)
        {
            sum = sum + Float.parseFloat(jTable1.getValueAt(i, 5).toString());
            i++;
        }
        
        amount.setText(decimalFormat.format(sum));
    }

  private void clear()
    {
        quantity.setText("00");
        total.setText("0.00");
        item.setSelectedIndex(0);
        gst.setSelectedIndex(0);
        jCheckBoxDiscount.setSelected(false);
        discount.setText("0.00");
        finalAmountPaid.setText("0.00");
        actualTotal.setText("0.00");
        purchaseGstAmountNew.setText("0.00");
    }
  
   private float calculatePer(float gst_percent)
    {
        float gstPer = 1+(gst_percent ) /100;      
        return gstPer;
    }
  private float calculateGSTPerNew(float gst_percent)
    {
        float gstPer =(gst_percent)/100 ;      
        return gstPer;
    }
   private float calculateGst(float total, float gst_percent)
    {
        float gstAmount = (total * gst_percent ) /100;      
        return gstAmount;
    }
      
   private void getFinalAmountPaid(String discount) {
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        finalAmountPaid.setText(decimalFormat.format(Float.parseFloat(amount.getText()) - Float.parseFloat(discount)));
    }
  
   private void remove() 
    {
        try
        {
            DefaultTableModel defaultTableModel= (DefaultTableModel)jTable1.getModel();  
            defaultTableModel.removeRow(jTable1.getSelectedRow());
            jTable1.setModel(defaultTableModel);
            getTotal();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select the row you want to remove"), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    public TableModel getTableData() {
        return jTable1.getModel();
    }
    
   private void addToTable() throws Exception {
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        DecimalFormat intFormat = new DecimalFormat("#0");
        String itemName = item.getSelectedItem().toString();
        String brandName = item.getSelectedItem().toString();
      //  String weight1 = this.weight.toString();
        float weight = Float.parseFloat(this.weight.getText().trim());
        String unitName = this.units.getSelectedItem().toString();
        /**
         * *********************manifacturing and Expairy Date Add to jTAble in
         * save *******************
         */
//        Date mfgDate = mfgDateText.getDate();
//        Date expDate = expDateText.getDate();
//        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
//        String mfg = dateFormat.format(mfgDate);
//        String exp = dateFormat.format(expDate);

        String gstType1 = "";
        if (jTable1.getRowCount() > 0) {
            if (gstTaken.isSelected()) {

                gstType1 = "GST";
            }  else {
                gstType1 = "NON-GST";
            }
            String gstTypeTable1 = jTable1.getValueAt(0, 9).toString();

            if ((!gstTypeTable1.equals(gstType1))) {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select only " + gstTypeTable1 + " Product"), "Error Message", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (itemName.equalsIgnoreCase("--select--")) {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select an Item"), "Error Message", JOptionPane.ERROR_MESSAGE);
            item.requestFocus();
            return;
        }
        if (itemName.equalsIgnoreCase("add new")) {
            if (newItem.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the name of the Item"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newItem.requestFocus();
                return;
            } else {
                itemName = newItem.getText().trim();
            }
        }
        
    if (brandName.equalsIgnoreCase("--select--")) {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select an Item"), "Error Message", JOptionPane.ERROR_MESSAGE);
            brand.requestFocus();
            return;
        }
        if (brandName.equalsIgnoreCase("add new")) {
            if (newBrand.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Brand name "), "Error Message", JOptionPane.ERROR_MESSAGE);
                newBrand.requestFocus();
                return;
            } else {
                brandName = newBrand.getText().trim();
            }    
   }
//        if (quantity.getText().trim().isEmpty()) {
//            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Quantity"), "Error Message", JOptionPane.ERROR_MESSAGE);
//            quantity.requestFocus();
//            return;
//        }
//        if (total.getText().trim().isEmpty()) {
//            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Total"), "Error Message", JOptionPane.ERROR_MESSAGE);
//            total.requestFocus();
//            return;
//            
           if(this.actualTotal.getText().trim().isEmpty()){
             JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Total"), "Error Message", JOptionPane.ERROR_MESSAGE);
            total.requestFocus();
            return;
             
          // }
        }
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
       // String hsnCode = this.hsnCode.getText().trim();
        float quantity = Float.parseFloat(this.quantity.getText().trim());
        float gst_percent = 0.0f;
        float igst_percent = 0.0f;
        //float total = Float.parseFloat(this.total.getText().trim());
        float total = Float.parseFloat(this.total.getText().trim());
        float actualTotal1 = Float.parseFloat(this.actualTotal.getText().trim());
        float sellingPrice;
        float sellingGstPercent;
        float sellingIGstPercent;

        String remarks = "";
        String type = "";
        float mrp;

       // sellingPrice = Float.parseFloat(this.sellingPrice.getText().trim());
        if (gstTaken.isSelected()) {
            gst_percent = Float.parseFloat(gst.getSelectedItem().toString());
            remarks = "GST";
            sellingGstPercent = Float.parseFloat(this.gst.getSelectedItem().toString());
            sellingIGstPercent = 0;
        } else {
            remarks = "NON-GST";
            sellingGstPercent = 0;
            sellingIGstPercent = 0;
        }
//        mrp = Float.parseFloat(this.mrpPrice.getText().trim());
//        float unitPrice = getUnitPrice(total, quantity);
        float gstAmount = 0.0f;
        float igstAmount = 0.0f;
        float finalTotal;
        if (gst_percent > 0) {
            gstAmount = calculateGst(total, gst_percent);
            finalTotal = total + gstAmount;
        } else if (igst_percent > 0) {
            igstAmount = calculateGst(total, igst_percent);
            finalTotal = total + igstAmount;
        } else {
//           igstAmount = calculateGst(total, igst_percent);
            finalTotal = total;
            gstAmount = 0;
            igstAmount = 0;
        }
        //sellingIGstPercent = Float.parseFloat(this.gst.getSelectedItem().toString());

        if (gstTaken.isSelected()) {
            remarks = "GST";
            type = "GST";
            sellingIGstPercent = Float.parseFloat(this.gst.getSelectedItem().toString());

        } else {
            remarks = "NON-GST";
            type = "NON-GST";
            sellingIGstPercent = 0;
        }

        if (gstTaken.isSelected()) {
            defaultTableModel.addRow(new Object[]{itemName, brandName,weight,unitName, quantity, total, decimalFormat.format(gst_percent), decimalFormat.format(gstAmount),decimalFormat.format(actualTotal1), type});
        }  else {
            defaultTableModel.addRow(new Object[]{itemName, brandName,weight,unitName, quantity, total, decimalFormat.format(0.0), decimalFormat.format(0.0), type});
        }
        jTable1.setModel(defaultTableModel);
        getTotal();
        clear();
        item.requestFocus();
    }
  
}
