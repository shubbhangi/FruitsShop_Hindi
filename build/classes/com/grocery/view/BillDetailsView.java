/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.SaleDetails;
import com.grocery.bean.SaleMaster;
import com.grocery.bean.StockDetailsPurchase;
import com.grocery.bean.VendorBillMaster;
import com.grocery.query.SaleMasterQuery;
import com.grocery.query.VendorBillMasterQuery;
import com.grocery.read.ReadFile;
import com.grocery.util.MyConnection;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Admin
 */
public class BillDetailsView extends javax.swing.JInternalFrame {

    private boolean flag;
    private int billId;
    public BillDetailsView(boolean flag, int billId) {
        initComponents();
        
        print.setVisible(false);
        
        this.flag = flag;
        this.billId = billId;
        jTable1.getTableHeader().setFont(new Font("Arial Unicode MS", Font.BOLD, 11));
        
        if(!(flag))
        {
            jLabelChallan.setVisible(false);
            challan.setVisible(false);
            jTable1.getColumnModel().getColumn(5).setMinWidth(0);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(0);
        }
        loadtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        purchase = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel40 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        bill = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        remark = new javax.swing.JTextField();
        jLabelChallan = new javax.swing.JLabel();
        challan = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelChallan1 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jLabelChallan2 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        jLabelChallan3 = new javax.swing.JLabel();
        finalTotal = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        print = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        purchase.setFont(new java.awt.Font("Arial Unicode MS", 1, 18)); // NOI18N
        purchase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        purchase.setText("बिल का विवरण");
        purchase.setToolTipText("Bill Details");

        jLabel40.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel40.setText("नाम:");
        jLabel40.setToolTipText("Name:");

        name.setEditable(false);
        name.setBackground(new java.awt.Color(255, 255, 153));
        name.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        name.setForeground(new java.awt.Color(255, 0, 0));
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel41.setText("दिनांक");
        jLabel41.setToolTipText("Date:");

        date.setEditable(false);
        date.setBackground(new java.awt.Color(255, 255, 153));
        date.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        date.setForeground(new java.awt.Color(255, 0, 0));
        date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel42.setText("बील नंबर:");
        jLabel42.setToolTipText("Bill Id:");

        bill.setEditable(false);
        bill.setBackground(new java.awt.Color(255, 255, 153));
        bill.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        bill.setForeground(new java.awt.Color(255, 0, 0));
        bill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel43.setText("टिप्पणी:");
        jLabel43.setToolTipText("Remark:");

        remark.setEditable(false);
        remark.setBackground(new java.awt.Color(255, 255, 153));
        remark.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        remark.setForeground(new java.awt.Color(255, 0, 0));
        remark.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarkActionPerformed(evt);
            }
        });

        jLabelChallan.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabelChallan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelChallan.setText("चालान #: ");
        jLabelChallan.setToolTipText("Challan #:");

        challan.setEditable(false);
        challan.setBackground(new java.awt.Color(255, 255, 153));
        challan.setFont(new java.awt.Font("Arial Unicode MS", 1, 11)); // NOI18N
        challan.setForeground(new java.awt.Color(255, 0, 0));
        challan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        challan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                challanActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "वस्तु का नाम", "बारकोड", "मात्रा", "यूनिट मूल्य", "जीएसटी %", "जीएसटी राशि", "कुल"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabelChallan1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabelChallan1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelChallan1.setText("बिल की राशि:");
        jLabelChallan1.setToolTipText("Bill Amount:");

        total.setEditable(false);
        total.setBackground(new java.awt.Color(255, 255, 153));
        total.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        total.setForeground(new java.awt.Color(255, 0, 0));
        total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        total.setToolTipText("");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jLabelChallan2.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabelChallan2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelChallan2.setText("छूट:");
        jLabelChallan2.setToolTipText("Discount:");

        discount.setEditable(false);
        discount.setBackground(new java.awt.Color(255, 255, 153));
        discount.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        discount.setForeground(new java.awt.Color(255, 0, 0));
        discount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discount.setToolTipText("");
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });

        jLabelChallan3.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabelChallan3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelChallan3.setText("कुल अंतिम:");
        jLabelChallan3.setToolTipText("Final Total:");

        finalTotal.setEditable(false);
        finalTotal.setBackground(new java.awt.Color(255, 255, 153));
        finalTotal.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        finalTotal.setForeground(new java.awt.Color(255, 0, 0));
        finalTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        finalTotal.setToolTipText("");
        finalTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalTotalActionPerformed(evt);
            }
        });

        print.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        print.setText("छाप");
        print.setToolTipText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(543, 543, 543)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelChallan3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelChallan1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelChallan2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(finalTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(22, 22, 22)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(remark)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelChallan)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(challan)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addComponent(jSeparator3))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(336, 336, 336))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelChallan, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(challan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChallan1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChallan2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelChallan3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(print)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_billActionPerformed

    private void remarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarkActionPerformed

    private void challanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_challanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_challanActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private void finalTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finalTotalActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
      int saleBillId =Integer.parseInt(bill.getText());
        print(saleBillId);
       // print(billId);
    }//GEN-LAST:event_printActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bill;
    private javax.swing.JTextField challan;
    private javax.swing.JTextField date;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField finalTotal;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabelChallan;
    private javax.swing.JLabel jLabelChallan1;
    private javax.swing.JLabel jLabelChallan2;
    private javax.swing.JLabel jLabelChallan3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JButton print;
    private javax.swing.JLabel purchase;
    private javax.swing.JTextField remark;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

    private void loadtable() 
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        defaultTableModel.setRowCount(0);
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");
        
        if(flag)
        {
            
            
            VendorBillMaster vendorBillMaster = new VendorBillMaster();
            vendorBillMaster.setId(billId);
            
            VendorBillMasterQuery vendorBillMasterQuery = new VendorBillMasterQuery();
            List<Object[]> list = vendorBillMasterQuery.getPurchaseByBillId(vendorBillMaster);
            
            for(Object[] object: list)
            {
                StockDetailsPurchase sd = (StockDetailsPurchase)object[0];
                
                defaultTableModel.addRow(new Object[]{sd.getPurchaseMaster().getName(), sd.getPurchaseMaster().getBrand(), sd.getQuantity(), sd.getActualAmount(), sd.getGstPercent(), sd.getGstAmount(), sd.getFinalTotal()});
                
                name.setText(sd.getVendorBillMaster().getVendorMaster().getName());
                date.setText(dateFormat.format(sd.getVendorBillMaster().getDate()));
                bill.setText(String.valueOf(sd.getVendorBillMaster().getId()));
                remark.setText(sd.getVendorBillMaster().getRemark());
                challan.setText(sd.getVendorBillMaster().getChallan());
                
                discount.setText(String.valueOf(sd.getVendorBillMaster().getDiscount()));
                finalTotal.setText(String.valueOf(sd.getVendorBillMaster().getFinalBillAmount()));
            }
        }
        
        else
        {
            SaleMaster saleMaster = new SaleMaster();
            saleMaster.setId(billId);
            
            SaleMasterQuery saleMasterQuery = new SaleMasterQuery();
            List<Object[]> list = saleMasterQuery.getSaleByBillId(saleMaster);
            
            for(Object[] object: list)
            {
                SaleDetails sd = (SaleDetails)object[0];
                
                defaultTableModel.addRow(new Object[]{sd.getItemMaster().getName(), sd.getItemMaster().getBarCode(), sd.getQuantity(), sd.getUnitPrice(), sd.getGstPercent(), "", sd.getTotal()});
                
                name.setText(sd.getSaleMaster().getCustomerDetails().getName());
                date.setText(dateFormat.format(sd.getSaleMaster().getDate()));
                bill.setText(String.valueOf(sd.getSaleMaster().getId()));
                remark.setText(sd.getSaleMaster().getRemark());
                
                discount.setText(String.valueOf(sd.getSaleMaster().getDiscount()));
                finalTotal.setText(String.valueOf(sd.getSaleMaster().getFinalBillAmount()));
            }
        }
        
        jTable1.setModel(defaultTableModel);
        getTotal();
    }

    private void getTotal() 
    {
        int i = 0;
        float sum = 0;
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        while(i < jTable1.getRowCount())
        {
            sum = sum + Float.parseFloat(jTable1.getValueAt(i, 6).toString());
            i++;
        }
        
        total.setText(decimalFormat.format(sum));
    }


   private void print(int billId){
       // private void printBill(VendorBillMaster vendorBillMaster, boolean flag) 
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        String joinQuery = "";
        if(remark.getText().equals("")){
            
        }
     if(flag)
       {
       
  
            //String reportSource = "";   
            

            joinQuery =  "SELECT\n" +
                            "     vendor_master.`Id` AS vendor_master_Id,\n" +
                            "     vendor_master.`name` AS vendor_master_name,\n" +
                            "     vendor_master.`contact` AS vendor_master_contact,\n" +
                            "     vendor_master.`address` AS vendor_master_address,\n" +
                            "     vendor_master.`registration` AS vendor_master_registration,\n" +
                            "     vendor_master.`balance` AS vendor_master_balance,\n" +
                            "     vendor_master.`gstNumber` AS gstNumber,\n" +
                            "     vendor_bill_master.`Id` AS vendor_bill_master_Id,\n" +
                            "     vendor_bill_master.`date` AS vendor_bill_master_date,\n" +
                            "     vendor_bill_master.`storeId` AS vendor_bill_master_storeId,\n" +
                            "     vendor_bill_master.`vendorId` AS vendor_bill_master_vendorId,\n" +
                            "     vendor_bill_master.`challan` AS vendor_bill_master_challan,\n" +
                            "     vendor_bill_master.`billAmount` AS vendor_bill_master_billAmount,\n" +
                            "     vendor_bill_master.`discount` AS vendor_bill_master_discount,\n" +
                            "     vendor_bill_master.`finalBillAmount` AS vendor_bill_master_finalBillAmount,\n" +
                            "     vendor_bill_master.`remark` AS vendor_bill_master_remark,\n" +
                            "     store_details.`Id` AS store_details_Id,\n" +
                            "     store_details.`name` AS store_details_name,\n" +
                            "     store_details.`address` AS store_details_address,\n" +
                            "     store_details.`city` AS store_details_city,\n" +
                            "     store_details.`state` AS store_details_state,\n" +
                            "     store_details.`pincode` AS store_details_pincode,\n" +
                            "     store_details.`phone` AS store_details_phone,\n" +
                            "     store_details.`website` AS store_details_website,\n" +
                            "     store_details.`email` AS store_details_email,\n" +
                            "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
                            "     store_details.`photo` AS store_details_photo,\n" +
                            "     stock_details.`Id` AS stock_details_Id,\n" +
                            "     stock_details.`billId` AS stock_details_billId,\n" +
                            "     stock_details.`itemId` AS stock_details_itemId,\n" +
                            "     stock_details.`quantity` AS stock_details_quantity,\n" +
                            "     stock_details.`unitPrice` AS stock_details_unitPrice,\n" +
                            "     stock_details.`gstPercent` AS stock_details_gstPercent,\n" +
                            "     stock_details.`igstPercent` AS stock_details_igstPercent,\n " +
                            "     stock_details.`igstAmount` AS stock_details_igstAmount,\n " +
                            "     stock_details.`gstAmount` AS stock_details_gstAmount,\n" +
                            "     stock_details.`finalTotal` AS stock_details_finalTotal,\n" +
                            "     item_master.`Id` AS item_master_Id,\n" +
                            "     item_master.`name` AS item_master_name,\n" +
                            "     item_master.`unitPrice` AS item_master_unitPrice,\n" +
                            "     item_master.`gstPercent` AS item_master_gstPercent,\n" +
                            "     item_master.`sellingPrice` AS item_master_sellingPrice,\n" +
                            "     item_master.`sellingGstPercent` AS item_master_sellingGstPercent,\n" +
                            "     item_master.`finalSellingPrice` AS item_master_finalSellingPrice,\n" +
                            "     item_master.`hsnCode` AS item_master_hsnCode \n" +
                            "FROM\n" +
                            "     `vendor_master` vendor_master INNER JOIN `vendor_bill_master` vendor_bill_master ON vendor_master.`Id` = vendor_bill_master.`vendorId`\n" +
                            "     INNER JOIN `store_details` store_details ON vendor_bill_master.`storeId` = store_details.`Id`\n" +
                            "     INNER JOIN `stock_details` stock_details ON vendor_bill_master.`Id` = stock_details.`billId`\n" +
                            "     INNER JOIN `item_master` item_master ON stock_details.`itemId` = item_master.`Id` \n" +
                           // "WHERE vendor_bill_master.id = " + vendorBillMaster.getId();
                            "WHERE vendor_bill_master.id = " + billId;
   
         
            try
            {
                connection = MyConnection.createConnection();
                statement = connection.createStatement();
                resultSet = statement.executeQuery(joinQuery);

                String reportSource = ""; 

                if(remark.getText().trim().equalsIgnoreCase("GST")){    
                  // reportSource = ReadFile.getPath() + "Reports\\GstPurchaseDetails.jrxml";
                  reportSource = ReadFile.getPath() + "Reports\\GstPurchaseDetails.jrxml";
               } else{
                    
                  reportSource = ReadFile.getPath() + "Reports\\IGstPurchaseDetails.jrxml";
                }
                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
                JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, resultSetDataSource);
                JasperViewer.viewReport(jasperPrint, false);

            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            finally
            {
                if (resultSet != null) 
                {
                    try 
                    {
                    //    System.out.println("Statement");
                        resultSet.close();
                    } 
                    catch (SQLException e) 
                    { /* ignored */}
    /*            }
                if (statement != null) 
                {
                    try 
                    {
                    //    System.out.println("Statement");
                        statement.close();
                    } 
                    catch (SQLException e) 
                    { /* ignored */}
              }

                if (connection != null) 
                {
                    try 
                    {
                    //    System.out.println("Connection");
                        connection.close();
                    } 
                    catch (SQLException e)
                    {

                    }
                }
    } 
    else {      
       SaleMaster saleMaster = new SaleMaster();             
        saleMaster.setId(billId);   
         joinQuery = "SELECT\n"

               + "   counter.`Id` AS counter_Id,\n"
               + "   counter.`name` AS counter_name,\n"
               + "    counter.`status` AS counter_status,\n"
               + "    item_master.`Id` AS item_master_Id,\n"
               + "    item_master.`name` AS item_master_name,\n"
               + "    item_master.`unitPrice` AS item_master_unitPrice,\n"
               + "    item_master.`gstPercent` AS item_master_gstPercent,\n"
               + "    item_master.`sellingPrice` AS item_master_sellingPrice,\n"
               + "   item_master.`sellingGstPercent` AS item_master_sellingGstPercent,\n"
               + "    item_master.`finalSellingPrice` AS item_master_finalSellingPrice,\n"
               + "    item_master.`hsnCode` AS hsnCode,\n"
               + "    customer_master.`Id` AS customer_master_Id,\n"
               + "    customer_master.`name` AS customer_master_name,\n"
               + "    customer_master.`contact` AS customer_master_contact,\n"
               + "    customer_master.`address` AS customer_master_address,\n"
               + "    customer_master.`balance` AS customer_master_balance,\n"
               + "    customer_master.`gstNumber` AS customer_master_gstNumber,\n"
               + "    sale_details.`Id` AS sale_details_Id,\n"
               + "    sale_details.`saleId` AS sale_details_saleId,\n"
               + "    sale_details.`itemId` AS sale_details_itemId,\n"
               + "    sale_details.`unitPrice` AS sale_details_unitPrice,\n"
               + "    sale_details.`gstPercent` AS sale_details_gstPercent,\n"
               + "    sale_details.`igstPercent` AS sale_details_igstPercent,\n"
               + "     sale_details.`sellingPrice` AS sale_details_sellingPrice,\n"
               + "    sale_details.`quantity` AS sale_details_quantity,\n"
               + "    sale_details.`total` AS sale_details_total,\n"
               + "    sale_master.`Id` AS sale_master_Id,\n"
               + "    sale_master.`date` AS sale_master_date,\n"
               + "    sale_master.`storeId` AS sale_master_storeId,\n"
               + "    sale_master.`counterId` AS sale_master_counterId,\n"
               + "    sale_master.`customerId` AS sale_master_customerId,\n"
               + "    sale_master.`billAmount` AS sale_master_billAmount,\n"
               + "     sale_master.`gstAmount` AS sale_master_gstAmount,\n"
               + "    sale_master.`discount` AS sale_master_discount,\n"
               + "    sale_master.`finalBillAmount` AS sale_master_finalBillAmount,\n"
               + "    sale_master.`status` AS sale_master_status,\n"
               + "    sale_master.`remark` AS sale_master_remark,\n"
               + "    store_details.`Id` AS store_details_Id,\n"
               + "    store_details.`name` AS store_details_name,\n"
               + "   store_details.`address` AS store_details_address,\n"
               + "   store_details.`city` AS store_details_city,\n"
               + "    store_details.`state` AS store_details_state,\n"
               + "    store_details.`pincode` AS store_details_pincode,\n"
               + "    store_details.`phone` AS store_details_phone,\n"
               + "    store_details.`website` AS store_details_website,\n"
               + "    store_details.`email` AS store_details_email,\n"
               + "   store_details.`gstNumber` AS store_details_gstNumber,\n"
               + "   store_details.`photo` AS store_details_photo\n"
             + " FROM\n"
              + "    `item_master` item_master INNER JOIN `sale_details` sale_details ON item_master.`Id` = sale_details.`itemId`\n"
              + "    INNER JOIN `sale_master` sale_master ON sale_details.`saleId` = sale_master.`Id`\n"
              + "    INNER JOIN `customer_master` customer_master ON sale_master.`customerId` = customer_master.`Id`\n"
              + "    INNER JOIN `counter` counter ON sale_master.`counterId` = counter.`Id`\n"
              + "    INNER JOIN `store_details` store_details ON sale_master.`storeId` = store_details.`Id`\n"
                               + "WHERE sale_master.id = " +saleMaster.getId();
 //                               "WHERE vendor_bill_master.id = " + billId;
         try {
             connection = MyConnection.createConnection();
             statement = connection.createStatement();
             resultSet = statement.executeQuery(joinQuery);

             String reportSource = "";
             
             String flag = remark.getText().trim();

             if ("GST".equals(flag)) {
                 //  reportSource = ReadFile.getPath() + "Reports\\GstSaleDetails.jrxml"; 
                 reportSource = ReadFile.getPath() + "Reports\\GstSaleDetailsNew.jrxml";

             } else if ("IGST".equals(flag)) {
                 //  reportSource = ReadFile.getPath() + "Reports\\GstSaleDetails.jrxml"; 
                 reportSource = ReadFile.getPath() + "Reports\\IGstSaleDetails.jrxml";
             } else {
                 reportSource = ReadFile.getPath() + "Reports\\NonGstSaleDetails.jrxml";
             }
             JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
             JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);

             JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, resultSetDataSource);
             JasperViewer.viewReport(jasperPrint, false);

         } catch (Exception e) {
             e.printStackTrace();
         } finally {
             if (resultSet != null) {
                 try {
                     //    System.out.println("Statement");
                     resultSet.close();
                 } catch (SQLException e) { /* ignored */

                 }
             }
             if (statement != null) {
                 try {
                     //    System.out.println("Statement");
                     statement.close();
                 } catch (SQLException e) { /* ignored */

                 }
             }

             if (connection != null) {
                 try {
                     //    System.out.println("Connection");
                     connection.close();
                 } catch (SQLException e) {

                 }
             }
         }
     }
 }
}

         
            
            
            
            
            

           
           
   
//   private void print(int billId) 
//    {
//        if(flag)
//        {
//            Connection connection = null;
//            Statement statement = null;
//            ResultSet resultSet = null;
//
//            String joinQuery = "SELECT\n" +
//                                "     vendor_master.`Id` AS vendor_master_Id,\n" +
//                                "     vendor_master.`name` AS vendor_master_name,\n" +
//                                "     vendor_master.`contact` AS vendor_master_contact,\n" +
//                                "     vendor_master.`address` AS vendor_master_address,\n" +
//                                "     vendor_master.`registration` AS vendor_master_registration,\n" +
//                                "     vendor_master.`balance` AS vendor_master_balance,\n" +
//                                "     vendor_master.`gstNumber` AS gstNumber,\n" +
//                                "     vendor_bill_master.`Id` AS vendor_bill_master_Id,\n" +
//                                "     vendor_bill_master.`date` AS vendor_bill_master_date,\n" +
//                                "     vendor_bill_master.`storeId` AS vendor_bill_master_storeId,\n" +
//                                "     vendor_bill_master.`vendorId` AS vendor_bill_master_vendorId,\n" +
//                                "     vendor_bill_master.`challan` AS vendor_bill_master_challan,\n" +
//                                "     vendor_bill_master.`billAmount` AS vendor_bill_master_billAmount,\n" +
//                                "     vendor_bill_master.`discount` AS vendor_bill_master_discount,\n" +
//                                "     vendor_bill_master.`finalBillAmount` AS vendor_bill_master_finalBillAmount,\n" +
//                                "     vendor_bill_master.`remark` AS vendor_bill_master_remark,\n" +
//                                "     store_details.`Id` AS store_details_Id,\n" +
//                                "     store_details.`name` AS store_details_name,\n" +
//                                "     store_details.`address` AS store_details_address,\n" +
//                                "     store_details.`city` AS store_details_city,\n" +
//                                "     store_details.`state` AS store_details_state,\n" +
//                                "     store_details.`pincode` AS store_details_pincode,\n" +
//                                "     store_details.`phone` AS store_details_phone,\n" +
//                                "     store_details.`website` AS store_details_website,\n" +
//                                "     store_details.`email` AS store_details_email,\n" +
//                                "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
//                                "     store_details.`photo` AS store_details_photo,\n" +
//                                "     stock_details.`Id` AS stock_details_Id,\n" +
//                                "     stock_details.`billId` AS stock_details_billId,\n" +
//                                "     stock_details.`itemId` AS stock_details_itemId,\n" +
//                                "     stock_details.`quantity` AS stock_details_quantity,\n" +
//                                "     stock_details.`unitPrice` AS stock_details_unitPrice,\n" +
//                                "     stock_details.`gstPercent` AS stock_details_gstPercent,\n" +
//                                "     stock_details.`gstAmount` AS stock_details_gstAmount,\n" +
//                                "     stock_details.`finalTotal` AS stock_details_finalTotal,\n" +
//                                "     item_master.`Id` AS item_master_Id,\n" +
//                                "     item_master.`name` AS item_master_name,\n" +
//                                "     item_master.`unitPrice` AS item_master_unitPrice,\n" +
//                                "     item_master.`gstPercent` AS item_master_gstPercent,\n" +
//                                "     item_master.`sellingPrice` AS item_master_sellingPrice,\n" +
//                                "     item_master.`sellingGstPercent` AS item_master_sellingGstPercent,\n" +
//                                "     item_master.`finalSellingPrice` AS item_master_finalSellingPrice,\n" +
//                                "     item_master.`hsnCode` AS item_master_hsnCode \n" +
//                                "FROM\n" +
//                                "     `vendor_master` vendor_master INNER JOIN `vendor_bill_master` vendor_bill_master ON vendor_master.`Id` = vendor_bill_master.`vendorId`\n" +
//                                "     INNER JOIN `store_details` store_details ON vendor_bill_master.`storeId` = store_details.`Id`\n" +
//                                "     INNER JOIN `stock_details` stock_details ON vendor_bill_master.`Id` = stock_details.`billId`\n" +
//                                "     INNER JOIN `item_master` item_master ON stock_details.`itemId` = item_master.`Id` \n" +
//                                "WHERE vendor_bill_master.id = " + billId;
//
//            try
//            {
//                connection = MyConnection.createConnection();
//                statement = connection.createStatement();
//                resultSet = statement.executeQuery(joinQuery);
//
//                String reportSource = ""; 
//
//                if(remark.getText().trim().equalsIgnoreCase("gst taken"))
//                  // reportSource = ReadFile.getPath() + "Reports\\GstPurchaseDetails.jrxml";
//                   reportSource = ReadFile.getPath() + "Reports\\GstPurchaseDetails.jrxml";
//                else
//                    reportSource = ReadFile.getPath() + "Reports\\NonGstPurchaseDetails.jrxml"; 
//
//                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
//                JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);
//
//                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, resultSetDataSource);
//                JasperViewer.viewReport(jasperPrint, false);
//
//            }
//            catch(Exception e)
//            {
//                e.printStackTrace();
//            }
//            finally
//            {
//                if (resultSet != null) 
//                {
//                    try 
//                    {
//                    //    System.out.println("Statement");
//                        resultSet.close();
//                    } 
//                    catch (SQLException e) 
//                    { /* ignored */}
//    /*            }
//                if (statement != null) 
//                {
//                    try 
//                    {
//                    //    System.out.println("Statement");
//                        statement.close();
//                    } 
//                    catch (SQLException e) 
//                    { /* ignored */}
//              }
//
//                if (connection != null) 
//                {
//                    try 
//                    {
//                    //    System.out.println("Connection");
//                        connection.close();
//                    } 
//                    catch (SQLException e)
//                    {
//
//                    }
//                }
//            }
//        }
//        
//        else
//        {
//            Connection connection = null;
//            Statement statement = null;
//            ResultSet resultSet = null;
//
//            String joinQuery =  "SELECT\n" +
//                                "     counter.`Id` AS counter_Id,\n" +
//                                "     counter.`name` AS counter_name,\n" +
//                                "     counter.`status` AS counter_status,\n" +
//                                "     item_master.`Id` AS item_master_Id,\n" +
//                                "     item_master.`name` AS item_master_name,\n" +
//                                "     item_master.`unitPrice` AS item_master_unitPrice,\n" +
//                                "     item_master.`gstPercent` AS item_master_gstPercent,\n" +
//                                "     item_master.`sellingPrice` AS item_master_sellingPrice,\n" +
//                                "     item_master.`sellingGstPercent` AS item_master_sellingGstPercent,\n" +
//                                "     item_master.`finalSellingPrice` AS item_master_finalSellingPrice,\n" +
//                                "     item_master.`hsnCode` AS hsnCode,\n" +
//                                "     sale_details.`Id` AS sale_details_Id,\n" +
//                                "     sale_details.`saleId` AS sale_details_saleId,\n" +
//                                "     sale_details.`itemId` AS sale_details_itemId,\n" +
//                                "     sale_details.`unitPrice` AS sale_details_unitPrice,\n" +
//                                "     sale_details.`gstPercent` AS sale_details_gstPercent,\n" +
//                                "     sale_details.`sellingPrice` AS sale_details_sellingPrice,\n" +
//                                "     sale_details.`quantity` AS sale_details_quantity,\n" +
//                                "     sale_details.`total` AS sale_details_total,\n" +
//                                "     sale_master.`Id` AS sale_master_Id,\n" +
//                                "     sale_master.`date` AS sale_master_date,\n" +
//                                "     sale_master.`storeId` AS sale_master_storeId,\n" +
//                                "     sale_master.`counterId` AS sale_master_counterId,\n" +
//                                "     sale_master.`customerId` AS sale_master_customerId,\n" +
//                                "     sale_master.`billAmount` AS sale_master_billAmount,\n" +
//                                "     sale_master.`discount` AS sale_master_discount,\n" +
//                                "     sale_master.`finalBillAmount` AS sale_master_finalBillAmount,\n" +
//                                "     sale_master.`status` AS sale_master_status,\n" +
//                                "     sale_master.`remark` AS sale_master_remark,\n" +
//                                "     store_details.`Id` AS store_details_Id,\n" +
//                                "     store_details.`name` AS store_details_name,\n" +
//                                "     store_details.`address` AS store_details_address,\n" +
//                                "     store_details.`city` AS store_details_city,\n" +
//                                "     store_details.`state` AS store_details_state,\n" +
//                                "     store_details.`pincode` AS store_details_pincode,\n" +
//                                "     store_details.`phone` AS store_details_phone,\n" +
//                                "     store_details.`website` AS store_details_website,\n" +
//                                "     store_details.`email` AS store_details_email,\n" +
//                                "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
//                                "     store_details.`photo` AS store_details_photo\n" +
//                                "FROM\n" +
//                                "     `item_master` item_master INNER JOIN `sale_details` sale_details ON item_master.`Id` = sale_details.`itemId`\n" +
//                                "     INNER JOIN `sale_master` sale_master ON sale_details.`saleId` = sale_master.`Id`\n" +
//                                "     INNER JOIN `counter` counter ON sale_master.`counterId` = counter.`Id`\n" +
//                                "     INNER JOIN `store_details` store_details ON sale_master.`storeId` = store_details.`Id` \n" +
//                                "WHERE sale_master.id = " + billId;
//
//            try
//            {
//                connection = MyConnection.createConnection();
//                statement = connection.createStatement();
//                resultSet = statement.executeQuery(joinQuery);
//
//                String reportSource = "";
//
//                if(remark.getText().trim().equalsIgnoreCase("gst taken"))
//                   reportSource = ReadFile.getPath() + "Reports\\GstSaleDetails.jrxml"; 
//                else
//                    reportSource = ReadFile.getPath() + "Reports\\NonGstSaleDetails.jrxml"; 
//
//                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
//                JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);
//
//                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, resultSetDataSource);
//                JasperViewer.viewReport(jasperPrint, false);
//
//            }
//            catch(Exception e)
//            {
//                e.printStackTrace();
//            }
//            finally
//            {
//                if (resultSet != null) 
//                {
//                    try 
//                    {
//                    //    System.out.println("Statement");
//                        resultSet.close();
//                    } 
//                    catch (SQLException e) 
//                    { /* ignored */}
//                }
//                if (statement != null) 
//                {
//                    try 
//                    {
//                    //    System.out.println("Statement");
//                        statement.close();
//                    } 
//                    catch (SQLException e) 
//                    { /* ignored */}
//                }
//
//                if (connection != null) 
//                {
//                    try 
//                    {
//                      //    System.out.println("Connection");
//                        connection.close();
//                    } 
//                    catch (SQLException e)
//                    {
//
//                    }
//                }
//            }
//        }
//    }
//}
