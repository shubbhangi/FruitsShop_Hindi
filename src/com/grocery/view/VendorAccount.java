/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.CustomerDetails;
import com.grocery.bean.VendorMaster;
import com.grocery.dimension.SetDimension;
import com.grocery.query.VendorQuery;
import com.grocery.query.CustomerDetailsQuery;
import com.grocery.read.MessageFormat;
import java.awt.Font;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Admin
 */
public class VendorAccount extends javax.swing.JInternalFrame {

    private JDesktopPane jDesktopPane;
    private boolean flag;
    public VendorAccount(JDesktopPane jDesktopPane, boolean flag) {
        initComponents();
        
         JLabel vendorAccounts;
         JLabel purchaseHistory;
     
        payment.setVisible(false);
        
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        this.jDesktopPane = jDesktopPane;
        this.flag = flag;
        
        if(flag)
        {
             vendorAccounts = new JLabel("Vendor Accounts");
             vendorAccounts.setBounds(50, 50, 100, 30);
             vendorAccounts.setFont(new Font("Arial Unicode MS", Font.PLAIN, 18));
             vendorAccounts.setText("विक्रेता खाते");
            
            purchaseHistory = new JLabel("Purchase History");
            purchaseHistory.setFont(new Font("Arial Unicode MS", Font.PLAIN, 18));
            purchaseHistory.setText("खरीद इतिहास");
        }
        else
        {
            vendorAccounts = new JLabel("Customer Accounts");
            vendorAccounts.setFont(new Font("Arial Unicode MS", Font.PLAIN, 18));
           // lable = label.setFont(new Font("Verdana", Font.PLAIN, 18));
            vendorAccounts.setText("ग्राहक खाते");
            
            purchaseHistory = new JLabel("Purchase History");
            purchaseHistory.setText("ग्राहक इतिहास");
            JTableHeader header= jTable1.getTableHeader();
            TableColumnModel colMod = header.getColumnModel();
            TableColumn tabCol = colMod.getColumn(1);
            tabCol.setHeaderValue("ग्राहक का नाम");
            header.repaint();
        }
        jTable1.getTableHeader().setFont(new Font("Arial Unicode MS", Font.BOLD, 11));
        
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        purchaseHistory = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        panel1 = new java.awt.Panel();
        vendorAccounts = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "नंबर", "विक्रेता का नाम", "अग्रिम संतुलन"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        purchaseHistory.setBackground(new java.awt.Color(153, 153, 255));
        purchaseHistory.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        purchaseHistory.setText("खरीद इतिहास");
        purchaseHistory.setToolTipText("Purchase History");
        purchaseHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseHistoryActionPerformed(evt);
            }
        });

        payment.setBackground(new java.awt.Color(153, 153, 255));
        payment.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        payment.setText("भुगतान इतिहास");
        payment.setToolTipText("Payment History");
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        refresh.setBackground(new java.awt.Color(153, 153, 255));
        refresh.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        refresh.setText("ताज़ा करना");
        refresh.setToolTipText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(0, 153, 153));

        vendorAccounts.setFont(new java.awt.Font("Arial Unicode MS", 1, 24)); // NOI18N
        vendorAccounts.setForeground(new java.awt.Color(255, 255, 255));
        vendorAccounts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendorAccounts.setText("विक्रेता खाते");
        vendorAccounts.setToolTipText("Vendor Accounts");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(vendorAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vendorAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(purchaseHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addComponent(jScrollPane1)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh)
                    .addComponent(payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchaseHistory))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void purchaseHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseHistoryActionPerformed
        purchaseHistory();
    }//GEN-LAST:event_purchaseHistoryActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        paymentHistory();
    }//GEN-LAST:event_paymentActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        loadTable();
    }//GEN-LAST:event_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private java.awt.Panel panel1;
    private javax.swing.JButton payment;
    private javax.swing.JButton purchaseHistory;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel vendorAccounts;
    // End of variables declaration//GEN-END:variables

    private void loadTable() 
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        defaultTableModel.setRowCount(0);
        if(flag)
        {
            VendorQuery vendorQuery = new VendorQuery();
            List<VendorMaster> list = vendorQuery.getVendor();
            
            for(VendorMaster vm: list)
                defaultTableModel.addRow(new Object[]{vm.getId(), vm.getName(), vm.getBalance()});
        }
        else
        {
            CustomerDetails customerDetails = new CustomerDetails();
            CustomerDetailsQuery warehoseDetailsQuery = new CustomerDetailsQuery();
            
            List<CustomerDetails> list = warehoseDetailsQuery.getCustomerDetails(customerDetails);
            
            for(CustomerDetails cm: list)
                defaultTableModel.addRow(new Object[]{cm.getId(), cm.getName(), cm.getBalance()});
        }
       
        jTable1.setModel(defaultTableModel);
    }

    private void purchaseHistory() 
    {
        try
        {
            
            PurchaseHistory storeDetails = new PurchaseHistory(jDesktopPane, flag, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
            if(flag)
                storeDetails.setTitle("Purchase History");
            else
                
//             vendorAccounts = new JLabel("Vendor Accounts");
//             vendorAccounts.setBounds(50, 50, 100, 30);
//             vendorAccounts.setFont(new Font("Arial Unicode MS", Font.PLAIN, 18));
            
                
               // storeDetails.setTitle("Sale History");
            storeDetails.setTitle("बिक्री का इतिहास");
            jDesktopPane.add(storeDetails);
            SetDimension setDimension = new SetDimension();
            setDimension.setInternalFrameLocation(jDesktopPane, storeDetails);
            storeDetails.setVisible(true);
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
           // JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select the row whose details you want to view"), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void paymentHistory() 
    {
        try
        {
            
            PaymentHistoryView storeDetails = new PaymentHistoryView(jDesktopPane, flag, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
            storeDetails.setTitle("Payment History");
            jDesktopPane.add(storeDetails);
            SetDimension setDimension = new SetDimension();
            setDimension.setInternalFrameLocation(jDesktopPane, storeDetails);
            storeDetails.setVisible(true);
            
            DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
            defaultTableModel.setRowCount(0);
            
            jTable1.setModel(defaultTableModel); 
       
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select the row whose payment history you want to view"), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
}
