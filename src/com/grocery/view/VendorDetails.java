/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.VendorMaster;
import com.grocery.query.VendorQuery;
import com.grocery.read.MessageFormat;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GanpatiBappa
 */
public class VendorDetails extends javax.swing.JFrame {
  private JPopupMenu jPopupMenu = new JPopupMenu();
    /**
     * Creates new form VendorDetails
     */
    public VendorDetails() {
        initComponents();
         jTable1.setComponentPopupMenu(jPopupMenu);
         //sellingPrice.setFont(sellingPrice.getFont().deriveFont(Font.BOLD, 11));
        jTable1.getTableHeader().setFont(new Font("Arial Unicode MS", Font.BOLD, 11));

        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0); 
        
         jTable1.getColumnModel().getColumn(8).setMinWidth(0);
         jTable1.getColumnModel().getColumn(8).setMaxWidth(0);
     
        
        VendorMaster vendorMaster = new VendorMaster();
        
        add.setMnemonic(KeyEvent.VK_A);
        edit.setMnemonic(KeyEvent.VK_E);
        delete.setMnemonic(KeyEvent.VK_D);
        
        loadVendor(vendorMaster); 
        vendorName.requestFocus();
        
        jLabel23.setVisible(false);
        balance.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        newVendor = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        address = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        state = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        gstNo = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        pincode = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        balance = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        vendorName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "नंबर", "विक्रेता का नाम", "संपर्क नंबर", "पता", "शहर", "राज्य", "पिन कोड", "जीएसटी नंबर", "संतुलन"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        edit.setBackground(new java.awt.Color(255, 255, 255));
        edit.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/pencile.png"))); // NOI18N
        edit.setMnemonic('\u0938');
        edit.setText("संपादित करें");
        edit.setToolTipText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editKeyPressed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/RemoveVen1.png"))); // NOI18N
        delete.setText("हटाएं");
        delete.setToolTipText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "जोड़ना", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Unicode MS", 2, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("विक्रेता का नाम");
        jLabel16.setToolTipText("Vendor Name");

        jLabel19.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("संपर्क");
        jLabel19.setToolTipText("Contact ");

        contact.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        contact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contact.setText("N/A");
        contact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactFocusLost(evt);
            }
        });
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactKeyTyped(evt);
            }
        });

        newVendor.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        newVendor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newVendor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newVendorFocusGained(evt);
            }
        });
        newVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVendorActionPerformed(evt);
            }
        });
        newVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newVendorKeyTyped(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "पता", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Unicode MS", 2, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText(" राज्य");
        jLabel20.setToolTipText("State");

        jLabel21.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("शहर");
        jLabel21.setToolTipText("City");

        jLabel43.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel43.setText("विक्रेता जी.एस.टी.");
        jLabel43.setToolTipText("Vendor GST ");

        gstNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gstNoKeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("पिन कोड");
        jLabel22.setToolTipText("Pin Code");

        pincode.setFont(new java.awt.Font("Arial Unicode MS", 0, 11)); // NOI18N
        pincode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pincodeKeyTyped(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("संतुलन");
        jLabel23.setToolTipText("Balance");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pincode)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gstNo)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel23))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gstNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contact)
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(153, 0, 51));
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/AddVendor.png"))); // NOI18N
        add.setText("जोड़ना");
        add.setToolTipText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App_icons/update_client2.png"))); // NOI18N
        jButton1.setText("ताज़ा करना");
        jButton1.setToolTipText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Vendor Information");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Back");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(309, 309, 309)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jLabel3.setText(" खोजकर्ता का नाम या संपर्क खोजें");
        jLabel3.setToolTipText("Search Vendor Name Or Contact");

        vendorName.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        vendorName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                vendorNameFocusGained(evt);
            }
        });
        vendorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vendorNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vendorNameKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vendorName, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int index = jTable1.getSelectedRow();
        //int gstPercent = (int)Float.parseFloat(jTable1.getValueAt(index, 4).toString());
//        int pincode = Integer.parseInt(jTable1.getValueAt(index, 6).toString());
        newVendor.setText(jTable1.getValueAt(index, 1).toString());
        contact.setText(jTable1.getValueAt(index, 2).toString());
        address.setText(jTable1.getValueAt(index, 3).toString());
        city.setText(jTable1.getValueAt(index, 4).toString());
        state.setText(jTable1.getValueAt(index, 5).toString());
       
        pincode.setText(jTable1.getValueAt(index, 6).toString());

        // this.gstPercent.setSelectedItem(String.valueOf(gstPercent));
 //       this.pincode.setText(String.valueOf(pincode));
       
        // this.pincode.setText(jTable1.getValueAt(index, 5).toString());
        gstNo.setText(jTable1.getValueAt(index, 7).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        if(evt.getButton() == MouseEvent.BUTTON3)
        {
            Point point = evt.getPoint();
            int currentRow = jTable1.rowAtPoint(point);
            jTable1.setRowSelectionInterval(currentRow, currentRow);
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseReleased

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        edit();
        //        AddNewVendor addNewVendor = new AddNewVendor();
        //        addNewVendor.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        edit();
    }//GEN-LAST:event_editKeyPressed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        deleteVendor();
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        checkDispose();
    }//GEN-LAST:event_deleteKeyPressed

    private void contactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFocusGained
        contact.selectAll();
    }//GEN-LAST:event_contactFocusGained

    private void contactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFocusLost
        if(contact.getText().trim().isEmpty())
        contact.setText("N/A");
    }//GEN-LAST:event_contactFocusLost

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void contactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyTyped
//        char c = evt.getKeyChar();
//        if(!(Character.isDigit(c) || c == '-'))
//        evt.consume();
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == '-'))
        evt.consume();
        
        if ((contact.getText() + evt.getKeyChar()).length() > 10) {
          evt.consume();
        }
    }//GEN-LAST:event_contactKeyTyped

    private void newVendorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newVendorFocusGained
        newVendor.selectAll();
    }//GEN-LAST:event_newVendorFocusGained

    private void newVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newVendorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newVendorActionPerformed

    private void newVendorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newVendorKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == ',' || c == '.' || c == KeyEvent.VK_SPACE || c == '-' || c == ':'))
        evt.consume();
    }//GEN-LAST:event_newVendorKeyTyped

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        addVendor();
    }//GEN-LAST:event_addActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                VendorMaster vendorMaster = new VendorMaster();
               loadVendor(vendorMaster);
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        clear();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        HomePage1 obj = new HomePage1();
        obj.show();

        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void vendorNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vendorNameFocusGained
        vendorName.selectAll();
    }//GEN-LAST:event_vendorNameFocusGained

    private void vendorNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendorNameKeyReleased
        VendorMaster vendorMaster = new VendorMaster();
        if(!(vendorName.getText().trim().isEmpty()))
        vendorMaster.setName(vendorName.getText().trim());
        //loadVendor(vendorMaster);
        loadTableSearchKey(vendorMaster);
    }//GEN-LAST:event_vendorNameKeyReleased

    private void vendorNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendorNameKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == ',' || c == '.' || c == KeyEvent.VK_SPACE || c == '-' || c == ':'))
        evt.consume();

    }//GEN-LAST:event_vendorNameKeyTyped

    private void pincodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pincodeKeyTyped
       if ((pincode.getText() + evt.getKeyChar()).length() > 6) {
          evt.consume();
        }
    }//GEN-LAST:event_pincodeKeyTyped

    private void gstNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gstNoKeyTyped
//        char c = evt.getKeyChar();
//        if(!(Character.isDigit(c) || c == '-' || c == ',' || c =='.'))
//        evt.consume();  
        
    }//GEN-LAST:event_gstNoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendorDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JTextField balance;
    private javax.swing.JTextField city;
    private javax.swing.JTextField contact;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JTextField gstNo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField newVendor;
    private javax.swing.JTextField pincode;
    private javax.swing.JTextField state;
    private javax.swing.JTextField vendorName;
    // End of variables declaration//GEN-END:variables
 public void loadTableSearchKey(VendorMaster vendorMaster)
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
       // defaultTableModel.setBackground(new Color(255, 255, 255));
        defaultTableModel.setRowCount(0);
        
        List<VendorMaster> list = new ArrayList<VendorMaster>();
       
        VendorQuery vendorQuery = new VendorQuery();
        
        list = vendorQuery.searchVendor(vendorMaster);
        for(VendorMaster vd: list)
        {
        //   defaultTableModel.addRow(new Object[]{vd.getId(),vd.getName(), vd.getContact(),vd.getAddress(),vd.getGstNumber(),vd.getBalance()});
           defaultTableModel.addRow(new Object[]{vd.getId(),vd.getName(), vd.getContact(),vd.getAddress(),vd.getCity(),vd.getState(),vd.getPincode(),vd.getGstNumber(),vd.getBalance()});
        }
        jTable1.setModel(defaultTableModel);
        
    }
  
    
    
    
    
    private void addVendor() {
    VendorMaster vendorMaster = new VendorMaster();
    if(newVendor.getText()!=null && !"".equals(newVendor.getText()))
    vendorMaster.setName(newVendor.getText());
    else{
         JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Vendor Name"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newVendor.requestFocus();
                return;
    }
    if(!"".equals(contact.getText()) && contact.getText()!=null)
    vendorMaster.setContact(contact.getText());
    else{
         JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the contact Number"), "Error Message", JOptionPane.ERROR_MESSAGE);
                contact.requestFocus();
                return;
    }
    if(!"".equals(address.getText()) && address.getText()!=null)
    vendorMaster.setAddress(address.getText());
    else{
         JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Address"), "Error Message", JOptionPane.ERROR_MESSAGE);
                address.requestFocus();
                return;
    }
    if(!"".equals(city.getText()) && city.getText()!=null)
    vendorMaster.setCity(city.getText());
    else{
       JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the City Name"), "Error Message", JOptionPane.ERROR_MESSAGE);
                city.requestFocus();
                return;  
    }
    if(!"".equals(state.getText()) && state.getText()!=null)
    vendorMaster.setState(state.getText());
    else{
        JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the state"), "Error Message", JOptionPane.ERROR_MESSAGE);
                state.requestFocus();
                return; 
    }
    if(!"".equals(pincode.getText()) && pincode.getText()!=null)
    vendorMaster.setPincode(Integer.parseInt(pincode.getText()));
    else{
        JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the pincode Number"), "Error Message", JOptionPane.ERROR_MESSAGE);
                pincode.requestFocus();
                return; 
    }
    if(!"".equals(gstNo.getText()) && gstNo.getText()!=null)
    vendorMaster.setGstNumber(gstNo.getText());
    else{
        JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the gst Nuuber"), "Error Message", JOptionPane.ERROR_MESSAGE);
                gstNo.requestFocus();
                return; 
    }
    
  /*  if(!"".equals(newVendor.getText()) && newVendor.getText()!=null)
    vendorMaster.setRegistration(title);
    else{
        JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Vendor Name"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newVendor.requestFocus();
                return; 
    }
    
    if(newVendor.getText()!=null && !"".equals(newVendor.getText()))
    vendorMaster.setBalance(BigDecimal.ZERO);
    else{
        JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Vendor Name"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newVendor.requestFocus();
                return; 
    }
    */
    
   // vendorMaster.setBalance(BigDecimal.valueOf(balance.getText()));
    VendorQuery vendorQuery = new VendorQuery();
    vendorQuery.insertVendor(vendorMaster);
    
    loadVendor(vendorMaster);
}
    
    public void loadVendor(VendorMaster vendorMaster) 
    {
       // VendorMaster vendorMaster = new VendorMaster();
          VendorQuery vendorQuery = new VendorQuery();
     
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
     
        defaultTableModel.setRowCount(0);
         List<VendorMaster> venList = vendorQuery.list();
         
         venList = vendorQuery.getVendorDetails(vendorMaster);
         //list = itemAvailabilityQuery.getAvailability(itemAvailability);

        for(VendorMaster vm: venList)

            defaultTableModel.addRow(new Object[]{vm.getId(),vm.getName(), vm.getContact(),vm.getAddress(),vm.getCity(),vm.getState(),vm.getPincode(),vm.getGstNumber(),vm.getBalance()});

        jTable1.setModel(defaultTableModel);

  } 
    
    public void clear()
    {
        newVendor.setText("");
        contact.setText("");
        address.setText("");
        city.setText("");
        state.setText("");
        pincode.setText("");
        gstNo.setText("");
        vendorName.requestFocus();
       
        VendorMaster vendorMaster = new VendorMaster();
        loadVendor(vendorMaster);
    } 
    
    
    private void edit() 
    {
        try
        {
            if(newVendor.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Vendor Name"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newVendor.requestFocus();
                return;
            }
            if(contact.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Contact number"), "Error Message", JOptionPane.ERROR_MESSAGE);
                contact.requestFocus();
                return;
            }
            VendorMaster vendorMaster = new VendorMaster();
            VendorQuery vendorQuery = new VendorQuery();
  
            vendorMaster.setName(newVendor.getText().trim());
            vendorMaster.setContact(contact.getText().trim());
            vendorMaster.setAddress(address.getText().trim());
            vendorMaster.setGstNumber(gstNo.getText().trim());
            vendorMaster.setId(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
            
            List<VendorMaster> list = vendorQuery.checkVendor(vendorMaster);
            if(!(list.isEmpty()))
            {
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("This Vendor already exists"), "Error Message", JOptionPane.ERROR_MESSAGE);
                newVendor.requestFocus();
                return;
            }
                     
            vendorMaster.setName(newVendor.getText().trim());
            vendorMaster.setContact(contact.getText().trim());
            vendorMaster.setAddress(address.getText().trim());
          
            vendorMaster.setPincode(Integer.parseInt(pincode.getText().trim()));
            
            vendorMaster.setGstNumber(gstNo.getText().trim());
            
            int confirm = JOptionPane.showConfirmDialog(null, MessageFormat.getMessage("Are you sure of Updating this Vendor Details?"));
            if(confirm == JOptionPane.YES_OPTION)
            {
                vendorQuery.updateVendor(vendorMaster);
  
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Vendor Details updated successfully"));
                //clear();
                loadVendor(vendorMaster);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select the Vendor you want to edit"), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
     private void checkDispose() 
    {
        int confirm = JOptionPane.showConfirmDialog(null, MessageFormat.getMessage("Are you sure of closing this form?"));
        if(confirm == JOptionPane.YES_OPTION)
            dispose();
    }
   
     
     private void deleteVendor() 
    {
        try
        {
            DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
          
            int index = jTable1.getSelectedRow();

             VendorMaster vendorMaster = new VendorMaster();

            vendorMaster.setId(Integer.parseInt(jTable1.getValueAt(index, 0).toString()));

            int confirm = JOptionPane.showConfirmDialog(null, MessageFormat.getMessage("Are you sure of deleting this guest?"));
            
            if(confirm == JOptionPane.YES_OPTION)
            {
                VendorQuery.deleteFromVendorMaster(vendorMaster);
                
                JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Employee Deleted successfully"));
                vendorMaster = new VendorMaster();
                loadVendor(vendorMaster);
            } 
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please select the employee you want to delete"), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
    } 
  }

