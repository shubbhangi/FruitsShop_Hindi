/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.Expenses;
import com.grocery.bean.ItemAvailability;
import com.grocery.bean.ItemMaster;
import com.grocery.bean.StockDetails;
import com.grocery.bean.StoreDetails;
import com.grocery.bean.VendorBillMaster;
import com.grocery.bean.VendorMaster;
import com.grocery.bean.VendorPartialPayment;
import com.grocery.dimension.SetDimension;
import com.grocery.query.BeginningCashQuery;
import com.grocery.query.ExpensesQuery;
import com.grocery.query.ItemAvailabilityQuery;
import com.grocery.query.ItemQuery;
import com.grocery.query.StockDetailsQuery;
import com.grocery.query.VendorBillMasterQuery;
import com.grocery.query.VendorPartialPaymentQuery;
import com.grocery.query.VendorQuery;
import com.grocery.read.MessageFormat;
import com.grocery.read.ReadFile;
import com.grocery.util.MyConnection;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;



public class PartialPaymentView extends javax.swing.JInternalFrame {

    private JDesktopPane jDesktopPane;
    private BigDecimal beginningCash;
    private BigDecimal expenses;
    private boolean newVendorFlag;
    private VendorMaster vendorMaster = new VendorMaster();
    private VendorPartialPayment vendorPartialPayment = new VendorPartialPayment();

    public PartialPaymentView(DefaultTableModel defaultTableModel, JDesktopPane jDesktopPane, VendorMaster vendorMaster, VendorPartialPayment vendorPartialPayment, boolean newVendorFlag, String challan, boolean newDiscount, float discount, float finalAmount, String reference) {
        initComponents();
        paidAmount.setFont(paidAmount.getFont().deriveFont(Font.BOLD, 16));
        this.jDesktopPane = jDesktopPane;
        this.newVendorFlag = newVendorFlag;
        this.challan.setText(challan);
        newVendor.setText(vendorMaster.getName());
        registration.setText(vendorMaster.getRegistration());
        contact.setText(vendorMaster.getContact());
        address.setText(vendorMaster.getAddress());
        gstNumber.setText(vendorMaster.getGstNumber());
        this.discount.setText(String.valueOf(discount));
        this.finalAmount.setText(String.valueOf(finalAmount));
        this.reference.setText(reference);
        
        chequeNumber.setText(vendorPartialPayment.getChequeCardNumber());
        bank.setText(vendorPartialPayment.getBank());
        paymentMode.setText(vendorPartialPayment.getPaymentMode());
        
        purchaseDate.setDate(vendorPartialPayment.getDate());
        
        if(vendorPartialPayment.getChequeDate() != null)
            chequeDate.setDate(vendorPartialPayment.getChequeDate());
        
        this.vendorMaster = vendorMaster;
        this.vendorPartialPayment = vendorPartialPayment;
        
        jPanelTable.setVisible(false);
        loadBeginningCash();
        loadExpenses();
        loadCash();
        loadTable(defaultTableModel);
        getTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        purchaseDate = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        newVendor = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        registration = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        paymentMode = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        chequeNumber = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        bank = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        pay = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        availableCash = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        paidAmount = new javax.swing.JFormattedTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        finalAmount = new javax.swing.JTextField();
        challan = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        chequeDate = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        gstNumber = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        reference = new javax.swing.JTextField();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanelTable.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "HSN Code", "Quantity", "Total", "Unit Price", "GST %", "GST Amount", "Final Total", "Selling Price", "Selling GST %", "Selling GST Amount", "Final Selling Price", "Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanelTableLayout = new javax.swing.GroupLayout(jPanelTable);
        jPanelTable.setLayout(jPanelTableLayout);
        jPanelTableLayout.setHorizontalGroup(
            jPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanelTableLayout.setVerticalGroup(
            jPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        jLabel29.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel29.setText("Purchase Date:");

        purchaseDate.setEnabled(false);
        purchaseDate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Vendor Name:");

        newVendor.setEditable(false);
        newVendor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newVendor.setForeground(new java.awt.Color(255, 0, 0));
        newVendor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newVendor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newVendorFocusGained(evt);
            }
        });
        newVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newVendorKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Vendor Details:");

        jLabel28.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setText("Registration #:");

        registration.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        registration.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        registration.setText("N/A");
        registration.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                registrationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                registrationFocusLost(evt);
            }
        });
        registration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                registrationKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Contact #:");

        contact.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        contact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contact.setText("N/A");
        contact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactFocusLost(evt);
            }
        });
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Address:");

        address.setColumns(20);
        address.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        address.setRows(5);
        address.setText("N/A");
        address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressFocusLost(evt);
            }
        });
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(address);

        jLabel18.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Bill Details:");

        jLabel21.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Payment Mode:");

        paymentMode.setEditable(false);
        paymentMode.setBackground(new java.awt.Color(255, 255, 153));
        paymentMode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        paymentMode.setForeground(new java.awt.Color(255, 0, 0));
        paymentMode.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel22.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Bill Amount:");

        jLabel23.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("Cheque/NEFT Date:");

        jLabel24.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel24.setText("Cheque/NEFT #:");

        chequeNumber.setEditable(false);
        chequeNumber.setBackground(new java.awt.Color(255, 255, 153));
        chequeNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chequeNumber.setForeground(new java.awt.Color(255, 0, 0));
        chequeNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        chequeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chequeNumberActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setText("Bank Name:");

        bank.setEditable(false);
        bank.setBackground(new java.awt.Color(255, 255, 153));
        bank.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bank.setForeground(new java.awt.Color(255, 0, 0));
        bank.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel26.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("Paid Amount:");

        pay.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        pay.setText("Pay");
        pay.setMnemonic(KeyEvent.VK_P);
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        pay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                payKeyPressed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cancel.setText("Cancel");
        cancel.setMnemonic(KeyEvent.VK_C);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("Available Cash:");

        availableCash.setBackground(new java.awt.Color(255, 255, 153));
        availableCash.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        availableCash.setForeground(new java.awt.Color(255, 0, 0));
        availableCash.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel30.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel30.setText("Challan #:");

        paidAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        paidAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        paidAmount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        paidAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                paidAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                paidAmountFocusLost(evt);
            }
        });
        paidAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paidAmountKeyPressed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Discount:");

        jLabel32.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel32.setText("Final Amount:");

        finalAmount.setEditable(false);
        finalAmount.setBackground(new java.awt.Color(255, 255, 153));
        finalAmount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        finalAmount.setForeground(new java.awt.Color(255, 0, 0));
        finalAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        challan.setEditable(false);
        challan.setBackground(new java.awt.Color(255, 255, 153));
        challan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        challan.setForeground(new java.awt.Color(255, 0, 0));
        challan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        challan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                challanActionPerformed(evt);
            }
        });

        amount.setEditable(false);
        amount.setBackground(new java.awt.Color(255, 255, 153));
        amount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        amount.setForeground(new java.awt.Color(255, 0, 0));
        amount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        discount.setEditable(false);
        discount.setBackground(new java.awt.Color(255, 255, 153));
        discount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        discount.setForeground(new java.awt.Color(255, 0, 0));
        discount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });

        chequeDate.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("Vendor GST #:");

        gstNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gstNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gstNumber.setText("N/A");
        gstNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gstNumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                gstNumberFocusLost(evt);
            }
        });
        gstNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gstNumberKeyTyped(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText("Reference:");

        reference.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reference.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        reference.setText("N/A");
        reference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                referenceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                referenceFocusLost(evt);
            }
        });
        reference.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                referenceKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(purchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(availableCash, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel17)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addGap(36, 36, 36)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addGap(15, 15, 15))
                                    .addComponent(jLabel34))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(reference, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(contact, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                        .addComponent(newVendor)
                                        .addComponent(gstNumber)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(registration, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(72, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel30)
                            .addComponent(jLabel22)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chequeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(challan, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel25)
                            .addComponent(jLabel32)
                            .addComponent(jLabel23))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bank, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(paymentMode, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(finalAmount)
                            .addComponent(chequeDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(purchaseDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gstNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(challan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chequeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chequeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pay)
                            .addComponent(cancel)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availableCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jPanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newVendorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newVendorFocusGained
        newVendor.selectAll();
    }//GEN-LAST:event_newVendorFocusGained

    private void newVendorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newVendorKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_SPACE) || c == '.' || c == '-'))
        evt.consume();
    }//GEN-LAST:event_newVendorKeyTyped

    private void registrationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_registrationFocusGained
        registration.selectAll();
    }//GEN-LAST:event_registrationFocusGained

    private void registrationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_registrationFocusLost
        if(registration.getText().trim().isEmpty())
            registration.setText("N/A");
    }//GEN-LAST:event_registrationFocusLost

    private void registrationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_registrationKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == KeyEvent.VK_SPACE))
            evt.consume();
    }//GEN-LAST:event_registrationKeyTyped

    private void contactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFocusGained
        contact.selectAll();
    }//GEN-LAST:event_contactFocusGained

    private void contactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFocusLost
        if(contact.getText().trim().isEmpty())
        contact.setText("N/A");
    }//GEN-LAST:event_contactFocusLost

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void contactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == '-'))
        evt.consume();
    }//GEN-LAST:event_contactKeyTyped

    private void addressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusLost
        if(address.getText().trim().isEmpty())
        address.setText("N/A");
    }//GEN-LAST:event_addressFocusLost

    private void addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyPressed
        address.setFocusTraversalKeysEnabled(false);
        if(evt.getKeyCode() == KeyEvent.VK_TAB)
        {
            paidAmount.requestFocus();
        }
    }//GEN-LAST:event_addressKeyPressed

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == ',' || c == '.' || c == KeyEvent.VK_SPACE || c == '-' || c == ':'))
        evt.consume();
    }//GEN-LAST:event_addressKeyTyped

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        pay();
    }//GEN-LAST:event_payActionPerformed

    private void payKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_payKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            pay();
    }//GEN-LAST:event_payKeyPressed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       // cancel();
    }//GEN-LAST:event_cancelActionPerformed

    private void chequeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chequeNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chequeNumberActionPerformed

    private void paidAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidAmountKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            pay();
    }//GEN-LAST:event_paidAmountKeyPressed

    private void paidAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_paidAmountFocusLost
        if(paidAmount.getText().trim().isEmpty())
            paidAmount.setText("0.00");
    }//GEN-LAST:event_paidAmountFocusLost

    private void paidAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_paidAmountFocusGained
        paidAmount.selectAll();
    }//GEN-LAST:event_paidAmountFocusGained

    private void challanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_challanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_challanActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private void gstNumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gstNumberFocusGained
        gstNumber.selectAll();
    }//GEN-LAST:event_gstNumberFocusGained

    private void gstNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gstNumberFocusLost
        if(gstNumber.getText().trim().isEmpty())
            gstNumber.setText("N/A");
    }//GEN-LAST:event_gstNumberFocusLost

    private void gstNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gstNumberKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == KeyEvent.VK_SPACE))
            evt.consume();
    }//GEN-LAST:event_gstNumberKeyTyped

    private void referenceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_referenceFocusGained
        reference.selectAll();
    }//GEN-LAST:event_referenceFocusGained

    private void referenceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_referenceFocusLost
        if(reference.getText().trim().isEmpty())
            reference.setText("N/A");
    }//GEN-LAST:event_referenceFocusLost

    private void referenceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_referenceKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c == KeyEvent.VK_BACK_SPACE)||  c == KeyEvent.VK_DELETE || Character.isDigit(c) || c == ',' || c == '.' || c == KeyEvent.VK_SPACE || c == '-' || c == ':'))
            evt.consume();
    }//GEN-LAST:event_referenceKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField availableCash;
    private javax.swing.JTextField bank;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField challan;
    private com.toedter.calendar.JDateChooser chequeDate;
    private javax.swing.JTextField chequeNumber;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField finalAmount;
    private javax.swing.JTextField gstNumber;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField newVendor;
    private javax.swing.JFormattedTextField paidAmount;
    private javax.swing.JButton pay;
    private javax.swing.JTextField paymentMode;
    private com.toedter.calendar.JDateChooser purchaseDate;
    private javax.swing.JTextField reference;
    private javax.swing.JTextField registration;
    // End of variables declaration//GEN-END:variables

    private void loadTable(DefaultTableModel defaultTableModel) 
    {
        jTable1.setModel(defaultTableModel);
    }
    
    private void loadBeginningCash() 
    {
        BeginningCashQuery beginningCashQuery = new BeginningCashQuery();
        
        List<BigDecimal> list = beginningCashQuery.getBeginningCash();
        
        for(BigDecimal bd: list)
            beginningCash = bd;
    }

    private void loadExpenses() 
    {
        ExpensesQuery expensesQuery = new ExpensesQuery();
        
        List<BigDecimal> list = expensesQuery.getExpenses();
        
        for(BigDecimal bd: list)
            expenses = bd;
    }

    private void loadCash() 
    {
        availableCash.setText(String.valueOf(beginningCash.subtract(expenses)));
    }
    
    private void getTotal()
    {
        int index = jTable1.getRowCount();
        int i = 0;
        float sum = 0;
        
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        
        while(i < index)
        {
            sum = sum + Float.parseFloat(jTable1.getValueAt(i, 7).toString());
            i++;
        }
        
        amount.setText(decimalFormat.format(sum));
    }

    private void pay() 
    {
        if(paidAmount.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Please enter the Paid Amount"), "Error Message", JOptionPane.ERROR_MESSAGE);
            paidAmount.requestFocus();
            return;
        }
        if(Float.parseFloat(paidAmount.getText().trim()) == 0 && !(paymentMode.getText().trim().equalsIgnoreCase("cash")))
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Paid Amount can't be zero for Card/Cheque/NEFT"), "Error Message", JOptionPane.ERROR_MESSAGE);
            paidAmount.requestFocus();
            return;
        }
        if((Float.parseFloat(paidAmount.getText().trim()) > Float.parseFloat(availableCash.getText().trim())) && (paymentMode.getText().trim().equalsIgnoreCase("cash") || paymentMode.getText().trim().equalsIgnoreCase("card")))
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Insufficient Funds!!!\nPlease pay by Cheque/NEFT"), "Error message", JOptionPane.ERROR_MESSAGE);
            paidAmount.requestFocus();
            return;
        }
        if((Float.parseFloat(paidAmount.getText().trim()) > Float.parseFloat(finalAmount.getText().trim())))
        {
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Paid Amount can't be greater than Bill Amount"), "Error message", JOptionPane.ERROR_MESSAGE);
            paidAmount.requestFocus();
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(null, MessageFormat.getMessage("Are you sure of making this Purchase?"));
        if(confirm == JOptionPane.YES_OPTION)
        {
            boolean flag = false;
            BigDecimal balance;
            String status = "";
            String paymentMode = this.paymentMode.getText().trim();
            
            if(paymentMode.equalsIgnoreCase("cash") || paymentMode.equalsIgnoreCase("card"))
            {
                 balance = new BigDecimal(finalAmount.getText()).subtract(new BigDecimal(paidAmount.getText()));
                status = "1";
            }
            else
            {
                balance = new BigDecimal(finalAmount.getText());
                status = "0";
            }
            VendorMaster vendorMaster = new VendorMaster();
            VendorQuery vendorQuery = new VendorQuery();

            vendorMaster.setName(newVendor.getText().trim());
            vendorMaster.setRegistration(registration.getText().trim());
            vendorMaster.setContact(contact.getText().trim());
            vendorMaster.setAddress(address.getText().trim());
            vendorMaster.setBalance(balance);
            vendorMaster.setGstNumber(gstNumber.getText().trim());
            
            List<VendorMaster> list = vendorQuery.getVendorDetails(vendorMaster);
            
            if(list.isEmpty())
                    vendorQuery.insertVendor(vendorMaster);
            else
            {
                for(VendorMaster vm: list)
                {
                    vendorMaster.setId(vm.getId());
                    vendorMaster.setBalance(vm.getBalance().add(balance));
                }    
                vendorQuery.updateVendor(vendorMaster);
            }
            
            
            VendorBillMaster vendorBillMaster = new VendorBillMaster();
            VendorBillMasterQuery vendorBillMasterQuery = new VendorBillMasterQuery();
            StoreDetails storeDetails = new StoreDetails();
             
            storeDetails.setId(1);
            
            vendorBillMaster.setDate(vendorPartialPayment.getDate());
            vendorBillMaster.setStoreDetails(storeDetails);
            vendorBillMaster.setVendorMaster(vendorMaster);
            vendorBillMaster.setChallan(challan.getText().trim());
            vendorBillMaster.setBillAmount(new BigDecimal(amount.getText().trim()));
            vendorBillMaster.setDiscount(new BigDecimal(discount.getText()));
            vendorBillMaster.setFinalBillAmount(new BigDecimal(finalAmount.getText()));
            vendorBillMaster.setRemark("GST Not Taken");
            vendorBillMaster.setReference(reference.getText().trim());
            
            vendorBillMasterQuery.insertIntoVendorBillMaster(vendorBillMaster);
            
            VendorPartialPayment vendorPartialPayment = new VendorPartialPayment();
            
            vendorPartialPayment.setDate(this.vendorPartialPayment.getDate());
            vendorPartialPayment.setVendorMaster(vendorMaster);
            vendorPartialPayment.setPaidAmount(new BigDecimal(paidAmount.getText().trim()));
            vendorPartialPayment.setPaymentMode(paymentMode);
            vendorPartialPayment.setChequeCardNumber(chequeNumber.getText().trim());
            vendorPartialPayment.setBank(bank.getText().trim());
            
            if(paymentMode.equalsIgnoreCase("cash") || paymentMode.equalsIgnoreCase("card"))
                status = "1";
            else
            {
                status = "0";
                vendorPartialPayment.setChequeDate(this.vendorPartialPayment.getChequeDate());
            }
            
            vendorPartialPayment.setStatus(status);
            
            VendorPartialPaymentQuery vendorPartialPaymentQuery = new VendorPartialPaymentQuery();
            vendorPartialPaymentQuery.insertIntoVendorPartialPayment(vendorPartialPayment);

            ItemMaster itemMaster = new ItemMaster();
            ItemAvailability itemAvailability = new ItemAvailability();
            StockDetails stockDetails = new StockDetails();

            ItemQuery itemQuery = new ItemQuery();
            StockDetailsQuery stockDetailsQuery = new StockDetailsQuery();
            ItemAvailabilityQuery itemAvailabilityQuery = new ItemAvailabilityQuery();

            String itemName = "";
            String hsnCode = "";
            BigDecimal quantity;
            BigDecimal total;
            BigDecimal unitPrice;
            BigDecimal gstPercent;
            BigDecimal gstAmount;                
            BigDecimal finalTotal;
            BigDecimal sellingPrice;
            BigDecimal sellingGstPercent;
            BigDecimal sellingGstAmount;
            BigDecimal finalSellingPrice;
            String remark = "";

            int i = 0;
            int count = 0;

            while(i < jTable1.getRowCount())
            {
                itemName = jTable1.getValueAt(i, 0).toString();
                hsnCode = jTable1.getValueAt(i, 1).toString();
                quantity = new BigDecimal(jTable1.getValueAt(i, 2).toString());
                total = new BigDecimal(jTable1.getValueAt(i, 3).toString());
                unitPrice = new BigDecimal(jTable1.getValueAt(i, 4).toString());
                gstPercent = new BigDecimal(jTable1.getValueAt(i, 5).toString());
                gstAmount = new BigDecimal(jTable1.getValueAt(i, 6).toString());
                finalTotal = new BigDecimal(jTable1.getValueAt(i, 7).toString());
                sellingPrice = new BigDecimal(jTable1.getValueAt(i, 8).toString());
                sellingGstPercent = new BigDecimal(jTable1.getValueAt(i, 9).toString());
                sellingGstAmount = new BigDecimal(jTable1.getValueAt(i, 10).toString());
                finalSellingPrice = new BigDecimal(jTable1.getValueAt(i, 11).toString());   
                remark = jTable1.getValueAt(i, 12).toString();
                    
                if(!(flag))
                    if(remark.equalsIgnoreCase("gst taken"))
                    {
                        flag = true;
                        vendorBillMaster.setRemark("GST Taken");
                    }
                
                itemMaster.setName(itemName);
                itemMaster.setBarCode(hsnCode);
                itemMaster.setUnitPrice(unitPrice);
                itemMaster.setGstPercent(gstPercent);
                itemMaster.setSellingGstPercent(sellingGstPercent);
                itemMaster.setSellingPrice(sellingPrice);
                itemMaster.setFinalSellingPrice(finalSellingPrice);

                List<ItemMaster> itemList = itemQuery.checkItem(itemMaster);
                if(itemList.isEmpty())
                    itemQuery.insertItem(itemMaster);
                else
                {
                    for(ItemMaster im: itemList)
                        itemMaster.setId(im.getId());
                }

                stockDetails.setVendorBillMaster(vendorBillMaster);
                stockDetails.setItemMaster(itemMaster);
                stockDetails.setQuantity(quantity);
                stockDetails.setUnitPrice(unitPrice);
                stockDetails.setGstPercent(gstPercent);
                stockDetails.setGstAmount(gstAmount);
                stockDetails.setFinalTotal(finalTotal);

                stockDetailsQuery.insertIntoStockDetails(stockDetails);

                BigDecimal thresholdPercent = new BigDecimal(0.25);
                
                itemAvailability.setItemMaster(itemMaster);
                itemAvailability.setAvailability(quantity);
                itemAvailability.setThreshold(thresholdPercent.multiply(quantity));
                
                List<ItemAvailability> itemAvailabilityList = itemAvailabilityQuery.checkItem(itemAvailability);

                if(itemAvailabilityList.isEmpty())
                    itemAvailabilityQuery.insertIntoItemAvailability(itemAvailability);
                else
                {
                    for(ItemAvailability ia: itemAvailabilityList)
                    {
                        itemAvailability.setId(ia.getId());
                        itemAvailability.setAvailability(ia.getAvailability().add(quantity));
                        itemAvailability.setThreshold(thresholdPercent.multiply(ia.getAvailability().add(quantity)));
                        
                        itemAvailabilityQuery.updateItemAvailability(itemAvailability);
                    }
                }
                i++;
            } 

            Expenses expenses = new Expenses();
            ExpensesQuery expensesQuery = new ExpensesQuery();

            if(paymentMode.equalsIgnoreCase("cash") || paymentMode.equalsIgnoreCase("card"))
            {                   
                expenses.setDate(this.purchaseDate.getDate());
                expenses.setAmount(new BigDecimal(paidAmount.getText()));
                expenses.setRemark("Stock Purchased with bill Id: " + vendorBillMaster.getId());

                expensesQuery.insertIntoExpenses(expenses);
            }
            if(flag)
                    vendorBillMasterQuery.updateVendorBillMaster(vendorBillMaster);
            
            JOptionPane.showMessageDialog(null, MessageFormat.getMessage("Stock added successfully"));
 
            dispose();
            
            AddStockView addStockView = new AddStockView(jDesktopPane);
            addStockView.setTitle("Purchase Items");
            jDesktopPane.add(addStockView);
            SetDimension setDimension = new SetDimension();
            setDimension.setInternalFrameLocation(jDesktopPane, addStockView);
            addStockView.setVisible(true); 
            
            printBill(vendorBillMaster, flag);
        }
    }

//    private void cancel() 
//    {
//        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
//        
//        AddStockView addStockView = new AddStockView(defaultTableModel, jDesktopPane, vendorMaster, vendorPartialPayment, newVendorFlag, challan.getText().trim(), discount.getText(), finalAmount.getText(), reference.getText().trim());
//        addStockView.setTitle("Purchase Items");
//        jDesktopPane.add(addStockView);
//        SetDimension setDimension = new SetDimension();
//        setDimension.setInternalFrameLocation(jDesktopPane, addStockView);
//        addStockView.setVisible(true);
//        
//        dispose();
//    }
    
    private void printBill(VendorBillMaster vendorBillMaster, boolean flag) 
    {
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        
        String joinQuery = "SELECT\n" +
                            "     vendor_master.`Id` AS vendor_master_Id,\n" +
                            "     vendor_master.`name` AS vendor_master_name,\n" +
                            "     vendor_master.`contact` AS vendor_master_contact,\n" +
                            "     vendor_master.`address` AS vendor_master_address,\n" +
                            "     vendor_master.`registration` AS vendor_master_registration,\n" +
                            "     vendor_master.`balance` AS vendor_master_balance,\n" +
                            "     vendor_master.`gstNumber` AS gstNumber,\n" +
                            "     vendor_bill_master.`Id` AS vendor_bill_master_Id,\n" +
                            "     vendor_bill_master.`date` AS vendor_bill_master_date,\n" +
                            "     vendor_bill_master.`storeId` AS vendor_bill_master_storeId,\n" +
                            "     vendor_bill_master.`vendorId` AS vendor_bill_master_vendorId,\n" +
                            "     vendor_bill_master.`challan` AS vendor_bill_master_challan,\n" +
                            "     vendor_bill_master.`billAmount` AS vendor_bill_master_billAmount,\n" +
                            "     vendor_bill_master.`discount` AS vendor_bill_master_discount,\n" +
                            "     vendor_bill_master.`finalBillAmount` AS vendor_bill_master_finalBillAmount,\n" +
                            "     vendor_bill_master.`remark` AS vendor_bill_master_remark,\n" +
                            "     store_details.`Id` AS store_details_Id,\n" +
                            "     store_details.`name` AS store_details_name,\n" +
                            "     store_details.`address` AS store_details_address,\n" +
                            "     store_details.`city` AS store_details_city,\n" +
                            "     store_details.`state` AS store_details_state,\n" +
                            "     store_details.`pincode` AS store_details_pincode,\n" +
                            "     store_details.`phone` AS store_details_phone,\n" +
                            "     store_details.`website` AS store_details_website,\n" +
                            "     store_details.`email` AS store_details_email,\n" +
                            "     store_details.`gstNumber` AS store_details_gstNumber,\n" +
                            "     store_details.`photo` AS store_details_photo,\n" +
                            "     stock_details.`Id` AS stock_details_Id,\n" +
                            "     stock_details.`billId` AS stock_details_billId,\n" +
                            "     stock_details.`itemId` AS stock_details_itemId,\n" +
                            "     stock_details.`quantity` AS stock_details_quantity,\n" +
                            "     stock_details.`unitPrice` AS stock_details_unitPrice,\n" +
                            "     stock_details.`gstPercent` AS stock_details_gstPercent,\n" +
                            "     stock_details.`gstAmount` AS stock_details_gstAmount,\n" +
                            "     stock_details.`finalTotal` AS stock_details_finalTotal,\n" +
                            "     item_master.`Id` AS item_master_Id,\n" +
                            "     item_master.`name` AS item_master_name,\n" +
                            "     item_master.`unitPrice` AS item_master_unitPrice,\n" +
                            "     item_master.`gstPercent` AS item_master_gstPercent,\n" +
                            "     item_master.`sellingPrice` AS item_master_sellingPrice,\n" +
                            "     item_master.`sellingGstPercent` AS item_master_sellingGstPercent,\n" +
                            "     item_master.`finalSellingPrice` AS item_master_finalSellingPrice,\n" +
                            "     item_master.`hsnCode` AS item_master_hsnCode \n" +
                            "FROM\n" +
                            "     `vendor_master` vendor_master INNER JOIN `vendor_bill_master` vendor_bill_master ON vendor_master.`Id` = vendor_bill_master.`vendorId`\n" +
                            "     INNER JOIN `store_details` store_details ON vendor_bill_master.`storeId` = store_details.`Id`\n" +
                            "     INNER JOIN `stock_details` stock_details ON vendor_bill_master.`Id` = stock_details.`billId`\n" +
                            "     INNER JOIN `item_master` item_master ON stock_details.`itemId` = item_master.`Id` \n" +
                            "WHERE vendor_bill_master.id = " + vendorBillMaster.getId();
        
        try
        {
            connection = MyConnection.createConnection();
            statement = connection.createStatement();
            resultSet = statement.executeQuery(joinQuery);
            
            String reportSource = "";
            
            if(flag)
                reportSource = ReadFile.getPath() + "Reports\\GstPurchaseDetails.jrxml"; 
           else
                reportSource = ReadFile.getPath() + "Reports\\NonGstPurchaseDetails.jrxml"; 
            
            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
            JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(resultSet);
            
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, resultSetDataSource);
            JasperViewer.viewReport(jasperPrint, false);
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            if (resultSet != null) 
            {
                try 
                {
                //    System.out.println("Statement");
                    resultSet.close();
                } 
                catch (SQLException e) 
                { /* ignored */}
            }
            if (statement != null) 
            {
                try 
                {
                //    System.out.println("Statement");
                    statement.close();
                } 
                catch (SQLException e) 
                { /* ignored */}
            }
            
            if (connection != null) 
            {
                try 
                {
                //    System.out.println("Connection");
                    connection.close();
                } 
                catch (SQLException e)
                {

                }
            }
        }
    }
}
