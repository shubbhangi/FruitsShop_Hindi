/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.view;

import com.grocery.bean.CustomerMaster;
import com.grocery.bean.CustomerPartialPayment;
import com.grocery.bean.VendorMaster;
import com.grocery.bean.VendorPartialPayment;
import com.grocery.dimension.SetDimension;
import com.grocery.query.CustomerPartialPaymentQuery;
import com.grocery.query.VendorPartialPaymentQuery;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class PaymentHistoryView extends javax.swing.JInternalFrame {

    private JDesktopPane jDesktopPane;
    private boolean flag;
    private int id;
    
    public PaymentHistoryView(JDesktopPane jDesktopPane, boolean flag, int id) {
        initComponents();
        this.jDesktopPane = jDesktopPane;
        this.flag = flag;
        this.id = id;
        jTable1.getTableHeader().setFont(new Font("Georgia", Font.BOLD, 11));
        loadTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        vendorAccounts = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelName = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelName1 = new javax.swing.JLabel();
        balance = new javax.swing.JTextField();
        jLabelName2 = new javax.swing.JLabel();
        pending = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        payment = new javax.swing.JButton();
        jLabelName3 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        vendorAccounts.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        vendorAccounts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendorAccounts.setText("Payment History");

        jLabelName.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabelName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelName.setText("Vendor Name:");

        name.setEditable(false);
        name.setBackground(new java.awt.Color(255, 255, 153));
        name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        name.setForeground(new java.awt.Color(255, 0, 0));
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
        });
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment Date", "Payment Mode", "Number", "Bank", "Paid Amount", "Cheque Date", "Clearance Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabelName1.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabelName1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelName1.setText("Total Balance:");

        balance.setEditable(false);
        balance.setBackground(new java.awt.Color(255, 255, 153));
        balance.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        balance.setForeground(new java.awt.Color(255, 0, 0));
        balance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        balance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balanceFocusGained(evt);
            }
        });
        balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceActionPerformed(evt);
            }
        });

        jLabelName2.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabelName2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelName2.setText("Clearance Pending:");

        pending.setEditable(false);
        pending.setBackground(new java.awt.Color(255, 255, 153));
        pending.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pending.setForeground(new java.awt.Color(255, 0, 0));
        pending.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pending.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pendingFocusGained(evt);
            }
        });
        pending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        payment.setText("Make Payment");
        payment.setMnemonic(KeyEvent.VK_M);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        jLabelName3.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jLabelName3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelName3.setText("Contact:");

        contact.setEditable(false);
        contact.setBackground(new java.awt.Color(255, 255, 153));
        contact.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        contact.setForeground(new java.awt.Color(255, 0, 0));
        contact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactFocusGained(evt);
            }
        });
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vendorAccounts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jScrollPane1)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 348, Short.MAX_VALUE)
                        .addComponent(jLabelName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jLabelName2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pending, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelName3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(payment)
                .addGap(386, 386, 386))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vendorAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelName3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelName2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payment)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained

    }//GEN-LAST:event_nameFocusGained

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void balanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balanceFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceFocusGained

    private void balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceActionPerformed

    private void pendingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pendingFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingFocusGained

    private void pendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        makePayment();
    }//GEN-LAST:event_paymentActionPerformed

    private void contactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_contactFocusGained

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balance;
    private javax.swing.JTextField contact;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelName1;
    private javax.swing.JLabel jLabelName2;
    private javax.swing.JLabel jLabelName3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JButton payment;
    private javax.swing.JTextField pending;
    private javax.swing.JLabel vendorAccounts;
    // End of variables declaration//GEN-END:variables

    private void loadTable() 
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        defaultTableModel.setRowCount(0);
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");
        
        int i = 0;
        
        if(flag)
        {
            VendorMaster vendorMaster = new VendorMaster();
            vendorMaster.setId(id);
            
            VendorPartialPayment vendorPartialPayment = new VendorPartialPayment();
            vendorPartialPayment.setVendorMaster(vendorMaster);
            
            VendorPartialPaymentQuery vendorPartialPaymentQuery = new VendorPartialPaymentQuery();
            
            List<Object[]> list = vendorPartialPaymentQuery.getVendorPaymentHistory(vendorPartialPayment);
            
            for(Object[] object: list)
            {                
                VendorPartialPayment vpp = (VendorPartialPayment) object[0];
                name.setText(vpp.getVendorMaster().getName());
                defaultTableModel.addRow(new Object[]{dateFormat.format(vpp.getDate()), vpp.getPaymentMode(), vpp.getChequeCardNumber(), vpp.getBank(), vpp.getPaidAmount()});
                
                if(vpp.getChequeDate() == null)
                    defaultTableModel.setValueAt("N/A", i, 5);
                else
                    defaultTableModel.setValueAt(dateFormat.format(vpp.getChequeDate()), i, 5);
                
                if(vpp.getChequeClearanceDate() == null)
                    defaultTableModel.setValueAt("N/A", i, 6);
                else
                    defaultTableModel.setValueAt(dateFormat.format(vpp.getChequeClearanceDate()), i, 6);
                            
                if(vpp.getStatus().equals("0"))
                    defaultTableModel.setValueAt("Pending", i, 7);
                else
                    if(vpp.getStatus().equals("1"))
                        defaultTableModel.setValueAt("Cleared", i, 7);
                    else
                        defaultTableModel.setValueAt("Bounced", i, 7);
                
                balance.setText(String.valueOf(vpp.getVendorMaster().getBalance()));
                contact.setText(vpp.getVendorMaster().getContact());
                i++;
            }
        }
        else
        {
            jLabelName.setText("Customer Name:");
           
            CustomerMaster customerMaster = new CustomerMaster();
            customerMaster.setId(id);
            
            CustomerPartialPayment customerPartialPayment = new CustomerPartialPayment();
            customerPartialPayment.setCustomerMaster(customerMaster);
            
            CustomerPartialPaymentQuery customerPartialPaymentQuery = new CustomerPartialPaymentQuery();
            
            List<Object[]> list = customerPartialPaymentQuery.getCustomerPaymentHistory(customerPartialPayment);
            
            for(Object[] object: list)
            {
                CustomerPartialPayment vpp = (CustomerPartialPayment)object[0];
                
                name.setText(vpp.getCustomerMaster().getName());
                defaultTableModel.addRow(new Object[]{dateFormat.format(vpp.getDate()), vpp.getPaymentMode(), vpp.getChequeOrCardNumber(), vpp.getBank(), vpp.getPaidAmount()});
                
                if(vpp.getChequeDate() == null)
                    defaultTableModel.setValueAt("N/A", i, 5);
                else
                    defaultTableModel.setValueAt(dateFormat.format(vpp.getChequeDate()), i, 5);
                
                if(vpp.getChequeClearanceDate() == null)
                    defaultTableModel.setValueAt("N/A", i, 6);
                else
                    defaultTableModel.setValueAt(dateFormat.format(vpp.getChequeClearanceDate()), i, 6);
                            
                if(vpp.getStatus().equals("0"))
                    defaultTableModel.setValueAt("Pending", i, 7);
                else
                    if(vpp.getStatus().equals("1"))
                        defaultTableModel.setValueAt("Cleared", i, 7);
                    else
                        defaultTableModel.setValueAt("Bounced", i, 7);
                
                balance.setText(String.valueOf(vpp.getCustomerMaster().getBalance()));
                contact.setText(vpp.getCustomerMaster().getContact());
                i++;
            }
        }
        jTable1.setModel(defaultTableModel);
        
        getTotalPending();
    }

    private void getTotalPending() 
    {
        int i = 0;
        DecimalFormat decimalFormat = new DecimalFormat("#0.00");
        
        float sum = 0;
        
        while(i < jTable1.getRowCount())
        {
            if(jTable1.getValueAt(i, 7).toString().equalsIgnoreCase("pending"))
                sum = sum + Float.parseFloat(jTable1.getValueAt(i, 4).toString());
            i++;
        }
        
        pending.setText(decimalFormat.format(sum));
    }

    private void makePayment() 
    {
        MakePaymentView storeDetails = new MakePaymentView(jDesktopPane, flag, id);
        storeDetails.setTitle("Make Payment");
        jDesktopPane.add(storeDetails);
        SetDimension setDimension = new SetDimension();
        setDimension.setInternalFrameLocation(jDesktopPane, storeDetails);
        storeDetails.setVisible(true);
        
        this.dispose();
    }
    
}
